/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */

/// IngredientUsage : todo



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IngredientUsage {
    /// multiplier
    #[serde(rename = "multiplier")]
    pub multiplier: f64,
    /// multiple amounts to try
    #[serde(rename = "amounts")]
    pub amounts: Vec<crate::models::Amount>,
    /// mappings of equivalent units
    #[serde(rename = "required_by")]
    pub required_by: Vec<crate::models::EntitySummary>,
}

impl IngredientUsage {
    /// todo
    pub fn new(multiplier: f64, amounts: Vec<crate::models::Amount>, required_by: Vec<crate::models::EntitySummary>) -> IngredientUsage {
        IngredientUsage {
            multiplier,
            amounts,
            required_by,
        }
    }
}


