/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SampleFoodItem {
    #[serde(rename = "fdcId")]
    pub fdc_id: i32,
    #[serde(rename = "datatype", skip_serializing_if = "Option::is_none")]
    pub datatype: Option<String>,
    #[serde(rename = "description")]
    pub description: String,
    #[serde(rename = "foodClass", skip_serializing_if = "Option::is_none")]
    pub food_class: Option<String>,
    #[serde(rename = "publicationDate", skip_serializing_if = "Option::is_none")]
    pub publication_date: Option<String>,
    #[serde(rename = "foodAttributes", skip_serializing_if = "Option::is_none")]
    pub food_attributes: Option<Vec<crate::models::SchemasFoodCategory>>,
}

impl SampleFoodItem {
    pub fn new(fdc_id: i32, description: String) -> SampleFoodItem {
        SampleFoodItem {
            fdc_id,
            datatype: None,
            description,
            food_class: None,
            publication_date: None,
            food_attributes: None,
        }
    }
}


