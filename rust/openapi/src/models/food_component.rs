/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FoodComponent {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "dataPoints", skip_serializing_if = "Option::is_none")]
    pub data_points: Option<i32>,
    #[serde(rename = "gramWeight", skip_serializing_if = "Option::is_none")]
    pub gram_weight: Option<f32>,
    #[serde(rename = "isRefuse", skip_serializing_if = "Option::is_none")]
    pub is_refuse: Option<bool>,
    #[serde(rename = "minYearAcquired", skip_serializing_if = "Option::is_none")]
    pub min_year_acquired: Option<i32>,
    #[serde(rename = "percentWeight", skip_serializing_if = "Option::is_none")]
    pub percent_weight: Option<f32>,
}

impl FoodComponent {
    pub fn new() -> FoodComponent {
        FoodComponent {
            id: None,
            name: None,
            data_points: None,
            gram_weight: None,
            is_refuse: None,
            min_year_acquired: None,
            percent_weight: None,
        }
    }
}


