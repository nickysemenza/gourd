/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct CompactRecipe {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
    pub image: Option<String>,
    #[serde(rename = "sections")]
    pub sections: Vec<crate::models::CompactRecipeSection>,
}

impl CompactRecipe {
    pub fn new(id: String, name: String, sections: Vec<crate::models::CompactRecipeSection>) -> CompactRecipe {
        CompactRecipe {
            id,
            name,
            url: None,
            image: None,
            sections,
        }
    }
}


