/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */

/// InputFoodSurvey : applies to Survey (FNDDS). Not all inputFoods will have all fields.



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct InputFoodSurvey {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "foodDescription", skip_serializing_if = "Option::is_none")]
    pub food_description: Option<String>,
    #[serde(rename = "ingredientCode", skip_serializing_if = "Option::is_none")]
    pub ingredient_code: Option<i32>,
    #[serde(rename = "ingredientDescription", skip_serializing_if = "Option::is_none")]
    pub ingredient_description: Option<String>,
    #[serde(rename = "ingredientWeight", skip_serializing_if = "Option::is_none")]
    pub ingredient_weight: Option<f64>,
    #[serde(rename = "portionCode", skip_serializing_if = "Option::is_none")]
    pub portion_code: Option<String>,
    #[serde(rename = "portionDescription", skip_serializing_if = "Option::is_none")]
    pub portion_description: Option<String>,
    #[serde(rename = "sequenceNumber", skip_serializing_if = "Option::is_none")]
    pub sequence_number: Option<i32>,
    #[serde(rename = "surveyFlag", skip_serializing_if = "Option::is_none")]
    pub survey_flag: Option<i32>,
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<String>,
    #[serde(rename = "inputFood", skip_serializing_if = "Option::is_none")]
    pub input_food: Option<Box<crate::models::SurveyFoodItem>>,
    #[serde(rename = "retentionFactor", skip_serializing_if = "Option::is_none")]
    pub retention_factor: Option<Box<crate::models::RetentionFactor>>,
}

impl InputFoodSurvey {
    /// applies to Survey (FNDDS). Not all inputFoods will have all fields.
    pub fn new() -> InputFoodSurvey {
        InputFoodSurvey {
            id: None,
            amount: None,
            food_description: None,
            ingredient_code: None,
            ingredient_description: None,
            ingredient_weight: None,
            portion_code: None,
            portion_description: None,
            sequence_number: None,
            survey_flag: None,
            unit: None,
            input_food: None,
            retention_factor: None,
        }
    }
}


