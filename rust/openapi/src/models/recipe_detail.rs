/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */

/// RecipeDetail : A revision of a recipe. does not include any \"generated\" fields. everything directly from db

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct RecipeDetail {
    /// id
    #[serde(rename = "id")]
    pub id: String,
    /// sections of the recipe
    #[serde(rename = "sections")]
    pub sections: Vec<crate::models::RecipeSection>,
    /// recipe name
    #[serde(rename = "name")]
    pub name: String,
    /// book or websites
    #[serde(rename = "sources")]
    pub sources: Vec<crate::models::RecipeSource>,
    #[serde(rename = "serving_info")]
    pub serving_info: Box<crate::models::RecipeServingInfo>,
    #[serde(rename = "meta")]
    pub meta: Box<crate::models::RecipeDetailMeta>,
    /// when the version was created
    #[serde(rename = "created_at")]
    pub created_at: String,
    /// tags
    #[serde(rename = "tags")]
    pub tags: Vec<String>,
}

impl RecipeDetail {
    /// A revision of a recipe. does not include any \"generated\" fields. everything directly from db
    pub fn new(
        id: String,
        sections: Vec<crate::models::RecipeSection>,
        name: String,
        sources: Vec<crate::models::RecipeSource>,
        serving_info: crate::models::RecipeServingInfo,
        meta: crate::models::RecipeDetailMeta,
        created_at: String,
        tags: Vec<String>,
    ) -> RecipeDetail {
        RecipeDetail {
            id,
            sections,
            name,
            sources,
            serving_info: Box::new(serving_info),
            meta: Box::new(meta),
            created_at,
            tags,
        }
    }
}
