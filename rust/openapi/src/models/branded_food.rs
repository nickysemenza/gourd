/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */

/// BrandedFood : branded_food



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct BrandedFood {
    #[serde(rename = "brand_owner", skip_serializing_if = "Option::is_none")]
    pub brand_owner: Option<String>,
    #[serde(rename = "ingredients", skip_serializing_if = "Option::is_none")]
    pub ingredients: Option<String>,
    #[serde(rename = "serving_size")]
    pub serving_size: f64,
    #[serde(rename = "serving_size_unit")]
    pub serving_size_unit: String,
    #[serde(rename = "household_serving", skip_serializing_if = "Option::is_none")]
    pub household_serving: Option<String>,
    #[serde(rename = "branded_food_category", skip_serializing_if = "Option::is_none")]
    pub branded_food_category: Option<String>,
}

impl BrandedFood {
    /// branded_food
    pub fn new(serving_size: f64, serving_size_unit: String) -> BrandedFood {
        BrandedFood {
            brand_owner: None,
            ingredients: None,
            serving_size,
            serving_size_unit,
            household_serving: None,
            branded_food_category: None,
        }
    }
}


