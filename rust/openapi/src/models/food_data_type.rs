/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */


/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FoodDataType {
    #[serde(rename = "foundation_food")]
    FoundationFood,
    #[serde(rename = "sample_food")]
    SampleFood,
    #[serde(rename = "market_acquisition")]
    MarketAcquisition,
    #[serde(rename = "survey_fndds_food")]
    SurveyFnddsFood,
    #[serde(rename = "sub_sample_food")]
    SubSampleFood,
    #[serde(rename = "agricultural_acquisition")]
    AgriculturalAcquisition,
    #[serde(rename = "sr_legacy_food")]
    SrLegacyFood,
    #[serde(rename = "branded_food")]
    BrandedFood,

}

impl ToString for FoodDataType {
    fn to_string(&self) -> String {
        match self {
            Self::FoundationFood => String::from("foundation_food"),
            Self::SampleFood => String::from("sample_food"),
            Self::MarketAcquisition => String::from("market_acquisition"),
            Self::SurveyFnddsFood => String::from("survey_fndds_food"),
            Self::SubSampleFood => String::from("sub_sample_food"),
            Self::AgriculturalAcquisition => String::from("agricultural_acquisition"),
            Self::SrLegacyFood => String::from("sr_legacy_food"),
            Self::BrandedFood => String::from("branded_food"),
        }
    }
}

impl Default for FoodDataType {
    fn default() -> FoodDataType {
        Self::FoundationFood
    }
}




