/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */

/// FoodResultByItem : A meal, which bridges recipes to photos



#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FoodResultByItem {
    #[serde(rename = "branded_food")]
    pub branded_food: Vec<crate::models::BrandedFoodItem>,
    #[serde(rename = "foundation_food")]
    pub foundation_food: Vec<crate::models::FoundationFoodItem>,
    #[serde(rename = "legacy_food")]
    pub legacy_food: Vec<crate::models::SrLegacyFoodItem>,
    #[serde(rename = "survey_food")]
    pub survey_food: Vec<crate::models::SurveyFoodItem>,
    #[serde(rename = "info")]
    pub info: Vec<crate::models::FoodInfo>,
}

impl FoodResultByItem {
    /// A meal, which bridges recipes to photos
    pub fn new(branded_food: Vec<crate::models::BrandedFoodItem>, foundation_food: Vec<crate::models::FoundationFoodItem>, legacy_food: Vec<crate::models::SrLegacyFoodItem>, survey_food: Vec<crate::models::SurveyFoodItem>, info: Vec<crate::models::FoodInfo>) -> FoodResultByItem {
        FoodResultByItem {
            branded_food,
            foundation_food,
            legacy_food,
            survey_food,
            info,
        }
    }
}


