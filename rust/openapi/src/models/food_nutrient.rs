/*
 * Gourd Recipe Database
 *
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct FoodNutrient {
    #[serde(rename = "id")]
    pub id: i32,
    #[serde(rename = "amount", skip_serializing_if = "Option::is_none")]
    pub amount: Option<f64>,
    #[serde(rename = "dataPoints", skip_serializing_if = "Option::is_none")]
    pub data_points: Option<i64>,
    #[serde(rename = "min", skip_serializing_if = "Option::is_none")]
    pub min: Option<f64>,
    #[serde(rename = "max", skip_serializing_if = "Option::is_none")]
    pub max: Option<f64>,
    #[serde(rename = "median", skip_serializing_if = "Option::is_none")]
    pub median: Option<f64>,
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub r#type: Option<String>,
    #[serde(rename = "nutrient", skip_serializing_if = "Option::is_none")]
    pub nutrient: Option<Box<crate::models::Nutrient>>,
    #[serde(rename = "foodNutrientDerivation", skip_serializing_if = "Option::is_none")]
    pub food_nutrient_derivation: Option<Box<crate::models::FoodNutrientDerivation>>,
    #[serde(rename = "nutrientAnalysisDetails", skip_serializing_if = "Option::is_none")]
    pub nutrient_analysis_details: Option<Box<crate::models::NutrientAnalysisDetails>>,
}

impl FoodNutrient {
    pub fn new(id: i32) -> FoodNutrient {
        FoodNutrient {
            id,
            amount: None,
            data_points: None,
            min: None,
            max: None,
            median: None,
            r#type: None,
            nutrient: None,
            food_nutrient_derivation: None,
            nutrient_analysis_details: None,
        }
    }
}


