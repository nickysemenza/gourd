# Use postgres/example user/password credentials
version: "3.1"

services:
  db:
    image: postgres:15.2
    restart: always
    ports:
      - "5555:5432"
    environment:
      POSTGRES_USER: gourd
      POSTGRES_PASSWORD: gourd
      POSTGRES_DB: food
    command:
      [
        "postgres",
        "-c",
        "log_min_duration_statement=0",
        "-c",
        "log_destination=stderr",
        "-c",
        "log_line_prefix=%t [%p]:[%l] user=%u, db=%d "
      ]
  usda_db:
    image: postgres:15.2
    volumes:
      - ./usda/migrate-up.sql:/docker-entrypoint-initdb.d/migrate.sql
    restart: always
    ports:
      - "5556:5432"
    environment:
      POSTGRES_USER: gourd
      POSTGRES_PASSWORD: gourd
      POSTGRES_DB: usda
  jaeger:
    container_name: food-jaeger
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - 5778:5778
      - 16686:16686 # UI
      - 14268:14268
      - 9411:9411
    image: "jaegertracing/all-in-one:latest"
  # Collector
  collector:
    image: otel/opentelemetry-collector:0.74.0
    platform: linux/amd64
    command: [ "--config=/conf/collector-config.yaml" ]
    volumes:
      - ./dev/collector-config.yaml:/conf/collector-config.yaml
    ports:
      - "9464:9464"
      - "4317:4317"
      - "55680:55680"
      - "55681:55681"
      - "4318:4318"
    depends_on:
      - jaeger

  # Prometheus
  prometheus:
    platform: linux/amd64
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./dev/prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  gourd:
    platform: linux/amd64
    build:
      context: .
    depends_on:
      - db
      - jaeger
      - rs
    restart: always
    environment:
      DATABASE_URL: postgres://gourd:gourd@db:5432/food
      DATABASE_URL_USDA: postgres://gourd:gourd@usda_db:5432/usda
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
      RS_URI: http://rs:8080/
      BYPASS_AUTH: "true"
      JWT_KEY: "foo"
    ports:
      - "4242:4242"

  rs:
    build:
      dockerfile: rust/Dockerfile
      context: .
    depends_on:
      - db
      - jaeger
    restart: always
    environment:
      JAEGER_ENDPOINT: http://jaeger:14268/api/traces
    ports:
      - "8080:8080"

  usda:
    # doesn't change much so can just use most recent image
    image: ghcr.io/nickysemenza/gourd-usda:dev
    # build:
    # context: usda
    depends_on:
      # - gourd
      - usda_db
    environment:
      DB_DSN: postgresql://gourd:gourd@usda_db:5432/usda
      CI: "true"
