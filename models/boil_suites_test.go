// Code generated by SQLBoiler 4.8.1 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import "testing"

// This test suite runs each operation test in parallel.
// Example, if your database has 3 tables, the suite will run:
// table1, table2 and table3 Delete in parallel
// table1, table2 and table3 Insert in parallel, and so forth.
// It does NOT run each operation group in parallel.
// Separating the tests thusly grants avoidance of Postgres deadlocks.
func TestParent(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbums)
	t.Run("GphotosPhotos", testGphotosPhotos)
	t.Run("Images", testImages)
	t.Run("IngredientUnits", testIngredientUnits)
	t.Run("Ingredients", testIngredients)
	t.Run("KVS", testKVS)
	t.Run("MealGphotos", testMealGphotos)
	t.Run("MealRecipes", testMealRecipes)
	t.Run("Meals", testMeals)
	t.Run("NotionImages", testNotionImages)
	t.Run("NotionRecipes", testNotionRecipes)
	t.Run("RecipeDetails", testRecipeDetails)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredients)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructions)
	t.Run("RecipeSections", testRecipeSections)
	t.Run("Recipes", testRecipes)
	t.Run("SchemaMigrations", testSchemaMigrations)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitions)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoods)
	t.Run("UsdaFoods", testUsdaFoods)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributes)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypes)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactors)
	t.Run("UsdaFoodCategories", testUsdaFoodCategories)
	t.Run("UsdaFoodComponents", testUsdaFoodComponents)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrients)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactors)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivations)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSources)
	t.Run("UsdaFoodPortions", testUsdaFoodPortions)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactors)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoods)
	t.Run("UsdaInputFoods", testUsdaInputFoods)
	t.Run("UsdaLabMethods", testUsdaLabMethods)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodes)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrients)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitions)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnits)
	t.Run("UsdaNutrients", testUsdaNutrients)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNames)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactors)
	t.Run("UsdaSampleFoods", testUsdaSampleFoods)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoods)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoods)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResults)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoods)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategories)
}

func TestDelete(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsDelete)
	t.Run("GphotosPhotos", testGphotosPhotosDelete)
	t.Run("Images", testImagesDelete)
	t.Run("IngredientUnits", testIngredientUnitsDelete)
	t.Run("Ingredients", testIngredientsDelete)
	t.Run("KVS", testKVSDelete)
	t.Run("MealGphotos", testMealGphotosDelete)
	t.Run("MealRecipes", testMealRecipesDelete)
	t.Run("Meals", testMealsDelete)
	t.Run("NotionImages", testNotionImagesDelete)
	t.Run("NotionRecipes", testNotionRecipesDelete)
	t.Run("RecipeDetails", testRecipeDetailsDelete)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsDelete)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsDelete)
	t.Run("RecipeSections", testRecipeSectionsDelete)
	t.Run("Recipes", testRecipesDelete)
	t.Run("SchemaMigrations", testSchemaMigrationsDelete)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsDelete)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsDelete)
	t.Run("UsdaFoods", testUsdaFoodsDelete)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesDelete)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesDelete)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsDelete)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesDelete)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsDelete)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsDelete)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsDelete)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsDelete)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesDelete)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsDelete)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsDelete)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsDelete)
	t.Run("UsdaInputFoods", testUsdaInputFoodsDelete)
	t.Run("UsdaLabMethods", testUsdaLabMethodsDelete)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesDelete)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsDelete)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsDelete)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsDelete)
	t.Run("UsdaNutrients", testUsdaNutrientsDelete)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesDelete)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsDelete)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsDelete)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsDelete)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsDelete)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsDelete)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsDelete)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesDelete)
}

func TestQueryDeleteAll(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsQueryDeleteAll)
	t.Run("GphotosPhotos", testGphotosPhotosQueryDeleteAll)
	t.Run("Images", testImagesQueryDeleteAll)
	t.Run("IngredientUnits", testIngredientUnitsQueryDeleteAll)
	t.Run("Ingredients", testIngredientsQueryDeleteAll)
	t.Run("KVS", testKVSQueryDeleteAll)
	t.Run("MealGphotos", testMealGphotosQueryDeleteAll)
	t.Run("MealRecipes", testMealRecipesQueryDeleteAll)
	t.Run("Meals", testMealsQueryDeleteAll)
	t.Run("NotionImages", testNotionImagesQueryDeleteAll)
	t.Run("NotionRecipes", testNotionRecipesQueryDeleteAll)
	t.Run("RecipeDetails", testRecipeDetailsQueryDeleteAll)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsQueryDeleteAll)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsQueryDeleteAll)
	t.Run("RecipeSections", testRecipeSectionsQueryDeleteAll)
	t.Run("Recipes", testRecipesQueryDeleteAll)
	t.Run("SchemaMigrations", testSchemaMigrationsQueryDeleteAll)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsQueryDeleteAll)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsQueryDeleteAll)
	t.Run("UsdaFoods", testUsdaFoodsQueryDeleteAll)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesQueryDeleteAll)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesQueryDeleteAll)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsQueryDeleteAll)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesQueryDeleteAll)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsQueryDeleteAll)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsQueryDeleteAll)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsQueryDeleteAll)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsQueryDeleteAll)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesQueryDeleteAll)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsQueryDeleteAll)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsQueryDeleteAll)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsQueryDeleteAll)
	t.Run("UsdaInputFoods", testUsdaInputFoodsQueryDeleteAll)
	t.Run("UsdaLabMethods", testUsdaLabMethodsQueryDeleteAll)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesQueryDeleteAll)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsQueryDeleteAll)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsQueryDeleteAll)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsQueryDeleteAll)
	t.Run("UsdaNutrients", testUsdaNutrientsQueryDeleteAll)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesQueryDeleteAll)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsQueryDeleteAll)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsQueryDeleteAll)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsQueryDeleteAll)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsQueryDeleteAll)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsQueryDeleteAll)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsQueryDeleteAll)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesQueryDeleteAll)
}

func TestSliceDeleteAll(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsSliceDeleteAll)
	t.Run("GphotosPhotos", testGphotosPhotosSliceDeleteAll)
	t.Run("Images", testImagesSliceDeleteAll)
	t.Run("IngredientUnits", testIngredientUnitsSliceDeleteAll)
	t.Run("Ingredients", testIngredientsSliceDeleteAll)
	t.Run("KVS", testKVSSliceDeleteAll)
	t.Run("MealGphotos", testMealGphotosSliceDeleteAll)
	t.Run("MealRecipes", testMealRecipesSliceDeleteAll)
	t.Run("Meals", testMealsSliceDeleteAll)
	t.Run("NotionImages", testNotionImagesSliceDeleteAll)
	t.Run("NotionRecipes", testNotionRecipesSliceDeleteAll)
	t.Run("RecipeDetails", testRecipeDetailsSliceDeleteAll)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsSliceDeleteAll)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsSliceDeleteAll)
	t.Run("RecipeSections", testRecipeSectionsSliceDeleteAll)
	t.Run("Recipes", testRecipesSliceDeleteAll)
	t.Run("SchemaMigrations", testSchemaMigrationsSliceDeleteAll)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsSliceDeleteAll)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsSliceDeleteAll)
	t.Run("UsdaFoods", testUsdaFoodsSliceDeleteAll)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesSliceDeleteAll)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesSliceDeleteAll)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsSliceDeleteAll)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesSliceDeleteAll)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsSliceDeleteAll)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsSliceDeleteAll)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsSliceDeleteAll)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsSliceDeleteAll)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesSliceDeleteAll)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsSliceDeleteAll)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsSliceDeleteAll)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsSliceDeleteAll)
	t.Run("UsdaInputFoods", testUsdaInputFoodsSliceDeleteAll)
	t.Run("UsdaLabMethods", testUsdaLabMethodsSliceDeleteAll)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesSliceDeleteAll)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsSliceDeleteAll)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsSliceDeleteAll)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsSliceDeleteAll)
	t.Run("UsdaNutrients", testUsdaNutrientsSliceDeleteAll)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesSliceDeleteAll)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsSliceDeleteAll)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsSliceDeleteAll)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsSliceDeleteAll)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsSliceDeleteAll)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsSliceDeleteAll)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsSliceDeleteAll)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesSliceDeleteAll)
}

func TestExists(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsExists)
	t.Run("GphotosPhotos", testGphotosPhotosExists)
	t.Run("Images", testImagesExists)
	t.Run("IngredientUnits", testIngredientUnitsExists)
	t.Run("Ingredients", testIngredientsExists)
	t.Run("KVS", testKVSExists)
	t.Run("MealGphotos", testMealGphotosExists)
	t.Run("MealRecipes", testMealRecipesExists)
	t.Run("Meals", testMealsExists)
	t.Run("NotionImages", testNotionImagesExists)
	t.Run("NotionRecipes", testNotionRecipesExists)
	t.Run("RecipeDetails", testRecipeDetailsExists)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsExists)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsExists)
	t.Run("RecipeSections", testRecipeSectionsExists)
	t.Run("Recipes", testRecipesExists)
	t.Run("SchemaMigrations", testSchemaMigrationsExists)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsExists)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsExists)
	t.Run("UsdaFoods", testUsdaFoodsExists)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesExists)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesExists)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsExists)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesExists)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsExists)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsExists)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsExists)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsExists)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesExists)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsExists)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsExists)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsExists)
	t.Run("UsdaInputFoods", testUsdaInputFoodsExists)
	t.Run("UsdaLabMethods", testUsdaLabMethodsExists)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesExists)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsExists)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsExists)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsExists)
	t.Run("UsdaNutrients", testUsdaNutrientsExists)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesExists)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsExists)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsExists)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsExists)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsExists)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsExists)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsExists)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesExists)
}

func TestFind(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsFind)
	t.Run("GphotosPhotos", testGphotosPhotosFind)
	t.Run("Images", testImagesFind)
	t.Run("IngredientUnits", testIngredientUnitsFind)
	t.Run("Ingredients", testIngredientsFind)
	t.Run("KVS", testKVSFind)
	t.Run("MealGphotos", testMealGphotosFind)
	t.Run("MealRecipes", testMealRecipesFind)
	t.Run("Meals", testMealsFind)
	t.Run("NotionImages", testNotionImagesFind)
	t.Run("NotionRecipes", testNotionRecipesFind)
	t.Run("RecipeDetails", testRecipeDetailsFind)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsFind)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsFind)
	t.Run("RecipeSections", testRecipeSectionsFind)
	t.Run("Recipes", testRecipesFind)
	t.Run("SchemaMigrations", testSchemaMigrationsFind)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsFind)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsFind)
	t.Run("UsdaFoods", testUsdaFoodsFind)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesFind)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesFind)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsFind)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesFind)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsFind)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsFind)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsFind)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsFind)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesFind)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsFind)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsFind)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsFind)
	t.Run("UsdaInputFoods", testUsdaInputFoodsFind)
	t.Run("UsdaLabMethods", testUsdaLabMethodsFind)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesFind)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsFind)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsFind)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsFind)
	t.Run("UsdaNutrients", testUsdaNutrientsFind)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesFind)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsFind)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsFind)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsFind)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsFind)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsFind)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsFind)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesFind)
}

func TestBind(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsBind)
	t.Run("GphotosPhotos", testGphotosPhotosBind)
	t.Run("Images", testImagesBind)
	t.Run("IngredientUnits", testIngredientUnitsBind)
	t.Run("Ingredients", testIngredientsBind)
	t.Run("KVS", testKVSBind)
	t.Run("MealGphotos", testMealGphotosBind)
	t.Run("MealRecipes", testMealRecipesBind)
	t.Run("Meals", testMealsBind)
	t.Run("NotionImages", testNotionImagesBind)
	t.Run("NotionRecipes", testNotionRecipesBind)
	t.Run("RecipeDetails", testRecipeDetailsBind)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsBind)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsBind)
	t.Run("RecipeSections", testRecipeSectionsBind)
	t.Run("Recipes", testRecipesBind)
	t.Run("SchemaMigrations", testSchemaMigrationsBind)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsBind)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsBind)
	t.Run("UsdaFoods", testUsdaFoodsBind)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesBind)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesBind)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsBind)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesBind)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsBind)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsBind)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsBind)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsBind)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesBind)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsBind)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsBind)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsBind)
	t.Run("UsdaInputFoods", testUsdaInputFoodsBind)
	t.Run("UsdaLabMethods", testUsdaLabMethodsBind)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesBind)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsBind)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsBind)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsBind)
	t.Run("UsdaNutrients", testUsdaNutrientsBind)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesBind)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsBind)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsBind)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsBind)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsBind)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsBind)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsBind)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesBind)
}

func TestOne(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsOne)
	t.Run("GphotosPhotos", testGphotosPhotosOne)
	t.Run("Images", testImagesOne)
	t.Run("IngredientUnits", testIngredientUnitsOne)
	t.Run("Ingredients", testIngredientsOne)
	t.Run("KVS", testKVSOne)
	t.Run("MealGphotos", testMealGphotosOne)
	t.Run("MealRecipes", testMealRecipesOne)
	t.Run("Meals", testMealsOne)
	t.Run("NotionImages", testNotionImagesOne)
	t.Run("NotionRecipes", testNotionRecipesOne)
	t.Run("RecipeDetails", testRecipeDetailsOne)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsOne)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsOne)
	t.Run("RecipeSections", testRecipeSectionsOne)
	t.Run("Recipes", testRecipesOne)
	t.Run("SchemaMigrations", testSchemaMigrationsOne)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsOne)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsOne)
	t.Run("UsdaFoods", testUsdaFoodsOne)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesOne)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesOne)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsOne)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesOne)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsOne)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsOne)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsOne)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsOne)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesOne)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsOne)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsOne)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsOne)
	t.Run("UsdaInputFoods", testUsdaInputFoodsOne)
	t.Run("UsdaLabMethods", testUsdaLabMethodsOne)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesOne)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsOne)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsOne)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsOne)
	t.Run("UsdaNutrients", testUsdaNutrientsOne)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesOne)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsOne)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsOne)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsOne)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsOne)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsOne)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsOne)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesOne)
}

func TestAll(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsAll)
	t.Run("GphotosPhotos", testGphotosPhotosAll)
	t.Run("Images", testImagesAll)
	t.Run("IngredientUnits", testIngredientUnitsAll)
	t.Run("Ingredients", testIngredientsAll)
	t.Run("KVS", testKVSAll)
	t.Run("MealGphotos", testMealGphotosAll)
	t.Run("MealRecipes", testMealRecipesAll)
	t.Run("Meals", testMealsAll)
	t.Run("NotionImages", testNotionImagesAll)
	t.Run("NotionRecipes", testNotionRecipesAll)
	t.Run("RecipeDetails", testRecipeDetailsAll)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsAll)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsAll)
	t.Run("RecipeSections", testRecipeSectionsAll)
	t.Run("Recipes", testRecipesAll)
	t.Run("SchemaMigrations", testSchemaMigrationsAll)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsAll)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsAll)
	t.Run("UsdaFoods", testUsdaFoodsAll)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesAll)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesAll)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsAll)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesAll)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsAll)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsAll)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsAll)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsAll)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesAll)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsAll)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsAll)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsAll)
	t.Run("UsdaInputFoods", testUsdaInputFoodsAll)
	t.Run("UsdaLabMethods", testUsdaLabMethodsAll)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesAll)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsAll)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsAll)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsAll)
	t.Run("UsdaNutrients", testUsdaNutrientsAll)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesAll)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsAll)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsAll)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsAll)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsAll)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsAll)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsAll)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesAll)
}

func TestCount(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsCount)
	t.Run("GphotosPhotos", testGphotosPhotosCount)
	t.Run("Images", testImagesCount)
	t.Run("IngredientUnits", testIngredientUnitsCount)
	t.Run("Ingredients", testIngredientsCount)
	t.Run("KVS", testKVSCount)
	t.Run("MealGphotos", testMealGphotosCount)
	t.Run("MealRecipes", testMealRecipesCount)
	t.Run("Meals", testMealsCount)
	t.Run("NotionImages", testNotionImagesCount)
	t.Run("NotionRecipes", testNotionRecipesCount)
	t.Run("RecipeDetails", testRecipeDetailsCount)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsCount)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsCount)
	t.Run("RecipeSections", testRecipeSectionsCount)
	t.Run("Recipes", testRecipesCount)
	t.Run("SchemaMigrations", testSchemaMigrationsCount)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsCount)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsCount)
	t.Run("UsdaFoods", testUsdaFoodsCount)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesCount)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesCount)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsCount)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesCount)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsCount)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsCount)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsCount)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsCount)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesCount)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsCount)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsCount)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsCount)
	t.Run("UsdaInputFoods", testUsdaInputFoodsCount)
	t.Run("UsdaLabMethods", testUsdaLabMethodsCount)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesCount)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsCount)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsCount)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsCount)
	t.Run("UsdaNutrients", testUsdaNutrientsCount)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesCount)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsCount)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsCount)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsCount)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsCount)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsCount)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsCount)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesCount)
}

func TestHooks(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsHooks)
	t.Run("GphotosPhotos", testGphotosPhotosHooks)
	t.Run("Images", testImagesHooks)
	t.Run("IngredientUnits", testIngredientUnitsHooks)
	t.Run("Ingredients", testIngredientsHooks)
	t.Run("KVS", testKVSHooks)
	t.Run("MealGphotos", testMealGphotosHooks)
	t.Run("MealRecipes", testMealRecipesHooks)
	t.Run("Meals", testMealsHooks)
	t.Run("NotionImages", testNotionImagesHooks)
	t.Run("NotionRecipes", testNotionRecipesHooks)
	t.Run("RecipeDetails", testRecipeDetailsHooks)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsHooks)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsHooks)
	t.Run("RecipeSections", testRecipeSectionsHooks)
	t.Run("Recipes", testRecipesHooks)
	t.Run("SchemaMigrations", testSchemaMigrationsHooks)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsHooks)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsHooks)
	t.Run("UsdaFoods", testUsdaFoodsHooks)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesHooks)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesHooks)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsHooks)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesHooks)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsHooks)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsHooks)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsHooks)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsHooks)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesHooks)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsHooks)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsHooks)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsHooks)
	t.Run("UsdaInputFoods", testUsdaInputFoodsHooks)
	t.Run("UsdaLabMethods", testUsdaLabMethodsHooks)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesHooks)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsHooks)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsHooks)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsHooks)
	t.Run("UsdaNutrients", testUsdaNutrientsHooks)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesHooks)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsHooks)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsHooks)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsHooks)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsHooks)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsHooks)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsHooks)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesHooks)
}

func TestInsert(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsInsert)
	t.Run("GphotosAlbums", testGphotosAlbumsInsertWhitelist)
	t.Run("GphotosPhotos", testGphotosPhotosInsert)
	t.Run("GphotosPhotos", testGphotosPhotosInsertWhitelist)
	t.Run("Images", testImagesInsert)
	t.Run("Images", testImagesInsertWhitelist)
	t.Run("IngredientUnits", testIngredientUnitsInsert)
	t.Run("IngredientUnits", testIngredientUnitsInsertWhitelist)
	t.Run("Ingredients", testIngredientsInsert)
	t.Run("Ingredients", testIngredientsInsertWhitelist)
	t.Run("KVS", testKVSInsert)
	t.Run("KVS", testKVSInsertWhitelist)
	t.Run("MealGphotos", testMealGphotosInsert)
	t.Run("MealGphotos", testMealGphotosInsertWhitelist)
	t.Run("MealRecipes", testMealRecipesInsert)
	t.Run("MealRecipes", testMealRecipesInsertWhitelist)
	t.Run("Meals", testMealsInsert)
	t.Run("Meals", testMealsInsertWhitelist)
	t.Run("NotionImages", testNotionImagesInsert)
	t.Run("NotionImages", testNotionImagesInsertWhitelist)
	t.Run("NotionRecipes", testNotionRecipesInsert)
	t.Run("NotionRecipes", testNotionRecipesInsertWhitelist)
	t.Run("RecipeDetails", testRecipeDetailsInsert)
	t.Run("RecipeDetails", testRecipeDetailsInsertWhitelist)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsInsert)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsInsertWhitelist)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsInsert)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsInsertWhitelist)
	t.Run("RecipeSections", testRecipeSectionsInsert)
	t.Run("RecipeSections", testRecipeSectionsInsertWhitelist)
	t.Run("Recipes", testRecipesInsert)
	t.Run("Recipes", testRecipesInsertWhitelist)
	t.Run("SchemaMigrations", testSchemaMigrationsInsert)
	t.Run("SchemaMigrations", testSchemaMigrationsInsertWhitelist)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsInsert)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsInsertWhitelist)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsInsert)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsInsertWhitelist)
	t.Run("UsdaFoods", testUsdaFoodsInsert)
	t.Run("UsdaFoods", testUsdaFoodsInsertWhitelist)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesInsert)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesInsertWhitelist)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesInsert)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesInsertWhitelist)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsInsert)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsInsertWhitelist)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesInsert)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesInsertWhitelist)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsInsert)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsInsertWhitelist)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsInsert)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsInsertWhitelist)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsInsert)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsInsertWhitelist)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsInsert)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsInsertWhitelist)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesInsert)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesInsertWhitelist)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsInsert)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsInsertWhitelist)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsInsert)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsInsertWhitelist)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsInsert)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsInsertWhitelist)
	t.Run("UsdaInputFoods", testUsdaInputFoodsInsert)
	t.Run("UsdaInputFoods", testUsdaInputFoodsInsertWhitelist)
	t.Run("UsdaLabMethods", testUsdaLabMethodsInsert)
	t.Run("UsdaLabMethods", testUsdaLabMethodsInsertWhitelist)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesInsert)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesInsertWhitelist)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsInsert)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsInsertWhitelist)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsInsert)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsInsertWhitelist)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsInsert)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsInsertWhitelist)
	t.Run("UsdaNutrients", testUsdaNutrientsInsert)
	t.Run("UsdaNutrients", testUsdaNutrientsInsertWhitelist)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesInsert)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesInsertWhitelist)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsInsert)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsInsertWhitelist)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsInsert)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsInsertWhitelist)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsInsert)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsInsertWhitelist)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsInsert)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsInsertWhitelist)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsInsert)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsInsertWhitelist)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsInsert)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsInsertWhitelist)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesInsert)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesInsertWhitelist)
}

// TestToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestToOne(t *testing.T) {
	t.Run("GphotosPhotoToGphotosAlbumUsingAlbum", testGphotosPhotoToOneGphotosAlbumUsingAlbum)
	t.Run("GphotosPhotoToImageUsingGphotosPhotoImage", testGphotosPhotoToOneImageUsingGphotosPhotoImage)
	t.Run("IngredientUnitToIngredientUsingIngredientUnitIngredient", testIngredientUnitToOneIngredientUsingIngredientUnitIngredient)
	t.Run("IngredientToIngredientUsingParentIngredient", testIngredientToOneIngredientUsingParentIngredient)
	t.Run("MealGphotoToGphotosPhotoUsingGphoto", testMealGphotoToOneGphotosPhotoUsingGphoto)
	t.Run("MealGphotoToRecipeUsingHighlightRecipeRecipe", testMealGphotoToOneRecipeUsingHighlightRecipeRecipe)
	t.Run("MealGphotoToMealUsingMealGphotoMeal", testMealGphotoToOneMealUsingMealGphotoMeal)
	t.Run("MealRecipeToMealUsingMeal", testMealRecipeToOneMealUsingMeal)
	t.Run("MealRecipeToRecipeUsingRecipe", testMealRecipeToOneRecipeUsingRecipe)
	t.Run("NotionImageToImageUsingNotionImageImage", testNotionImageToOneImageUsingNotionImageImage)
	t.Run("NotionImageToNotionRecipeUsingPage", testNotionImageToOneNotionRecipeUsingPage)
	t.Run("NotionRecipeToRecipeUsingNotionRecipeRecipe", testNotionRecipeToOneRecipeUsingNotionRecipeRecipe)
	t.Run("RecipeDetailToRecipeUsingRecipe", testRecipeDetailToOneRecipeUsingRecipe)
	t.Run("RecipeSectionIngredientToIngredientUsingRecipeSectionIngredientIngredient", testRecipeSectionIngredientToOneIngredientUsingRecipeSectionIngredientIngredient)
	t.Run("RecipeSectionIngredientToRecipeUsingRecipeSectionIngredientRecipe", testRecipeSectionIngredientToOneRecipeUsingRecipeSectionIngredientRecipe)
	t.Run("RecipeSectionIngredientToRecipeSectionUsingSectionRecipeSection", testRecipeSectionIngredientToOneRecipeSectionUsingSectionRecipeSection)
	t.Run("RecipeSectionIngredientToRecipeSectionIngredientUsingSubstitutesForRecipeSectionIngredient", testRecipeSectionIngredientToOneRecipeSectionIngredientUsingSubstitutesForRecipeSectionIngredient)
	t.Run("RecipeSectionInstructionToRecipeSectionUsingSectionRecipeSection", testRecipeSectionInstructionToOneRecipeSectionUsingSectionRecipeSection)
	t.Run("RecipeSectionToRecipeDetailUsingRecipeSectionRecipeDetail", testRecipeSectionToOneRecipeDetailUsingRecipeSectionRecipeDetail)
	t.Run("UsdaBrandedFoodToUsdaFoodUsingFDC", testUsdaBrandedFoodToOneUsdaFoodUsingFDC)
	t.Run("UsdaFoodAttributeToUsdaFoodUsingFDC", testUsdaFoodAttributeToOneUsdaFoodUsingFDC)
	t.Run("UsdaFoodAttributeToUsdaFoodAttributeTypeUsingFoodAttributeType", testUsdaFoodAttributeToOneUsdaFoodAttributeTypeUsingFoodAttributeType)
	t.Run("UsdaFoodComponentToUsdaFoodUsingFDC", testUsdaFoodComponentToOneUsdaFoodUsingFDC)
	t.Run("UsdaFoodNutrientToUsdaFoodNutrientDerivationUsingDerivation", testUsdaFoodNutrientToOneUsdaFoodNutrientDerivationUsingDerivation)
	t.Run("UsdaFoodNutrientConversionFactorToUsdaFoodUsingFDC", testUsdaFoodNutrientConversionFactorToOneUsdaFoodUsingFDC)
	t.Run("UsdaFoodNutrientDerivationToUsdaFoodNutrientSourceUsingSource", testUsdaFoodNutrientDerivationToOneUsdaFoodNutrientSourceUsingSource)
	t.Run("UsdaFoodPortionToUsdaFoodUsingFDC", testUsdaFoodPortionToOneUsdaFoodUsingFDC)
	t.Run("UsdaFoodPortionToUsdaMeasureUnitUsingMeasureUnit", testUsdaFoodPortionToOneUsdaMeasureUnitUsingMeasureUnit)
	t.Run("UsdaFoodProteinConversionFactorToUsdaFoodNutrientConversionFactorUsingFoodNutrientConversionFactor", testUsdaFoodProteinConversionFactorToOneUsdaFoodNutrientConversionFactorUsingFoodNutrientConversionFactor)
	t.Run("UsdaFoundationFoodToUsdaFoodUsingFDC", testUsdaFoundationFoodToOneUsdaFoodUsingFDC)
	t.Run("UsdaInputFoodToUsdaFoodUsingFDC", testUsdaInputFoodToOneUsdaFoodUsingFDC)
	t.Run("UsdaInputFoodToUsdaFoodUsingFDCIDOfInputFoodUsdaFood", testUsdaInputFoodToOneUsdaFoodUsingFDCIDOfInputFoodUsdaFood)
	t.Run("UsdaLabMethodCodeToUsdaLabMethodUsingLabMethod", testUsdaLabMethodCodeToOneUsdaLabMethodUsingLabMethod)
	t.Run("UsdaLabMethodNutrientToUsdaLabMethodUsingLabMethod", testUsdaLabMethodNutrientToOneUsdaLabMethodUsingLabMethod)
	t.Run("UsdaMarketAcquisitionToUsdaFoodUsingFDC", testUsdaMarketAcquisitionToOneUsdaFoodUsingFDC)
	t.Run("UsdaNutrientIncomingNameToUsdaNutrientUsingNutrient", testUsdaNutrientIncomingNameToOneUsdaNutrientUsingNutrient)
	t.Run("UsdaRetentionFactorToUsdaFoodCategoryUsingFoodGroup", testUsdaRetentionFactorToOneUsdaFoodCategoryUsingFoodGroup)
	t.Run("UsdaSampleFoodToUsdaFoodUsingFDC", testUsdaSampleFoodToOneUsdaFoodUsingFDC)
	t.Run("UsdaSRLegacyFoodToUsdaFoodUsingFDC", testUsdaSRLegacyFoodToOneUsdaFoodUsingFDC)
	t.Run("UsdaSubSampleFoodToUsdaFoodUsingFDC", testUsdaSubSampleFoodToOneUsdaFoodUsingFDC)
	t.Run("UsdaSubSampleFoodToUsdaFoodUsingFDCIDOfSampleFoodUsdaFood", testUsdaSubSampleFoodToOneUsdaFoodUsingFDCIDOfSampleFoodUsdaFood)
	t.Run("UsdaSubSampleResultToUsdaFoodNutrientUsingFoodNutrient", testUsdaSubSampleResultToOneUsdaFoodNutrientUsingFoodNutrient)
	t.Run("UsdaSubSampleResultToUsdaLabMethodUsingLabMethod", testUsdaSubSampleResultToOneUsdaLabMethodUsingLabMethod)
	t.Run("UsdaSurveyFNDDSFoodToUsdaFoodUsingFDC", testUsdaSurveyFNDDSFoodToOneUsdaFoodUsingFDC)
	t.Run("UsdaSurveyFNDDSFoodToUsdaWweiaFoodCategoryUsingWweiaCategoryCodeUsdaWweiaFoodCategory", testUsdaSurveyFNDDSFoodToOneUsdaWweiaFoodCategoryUsingWweiaCategoryCodeUsdaWweiaFoodCategory)
}

// TestOneToOne tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOne(t *testing.T) {
	t.Run("RecipeToRecipeDetailUsingRecipeDetail", testRecipeOneToOneRecipeDetailUsingRecipeDetail)
	t.Run("UsdaFoodToUsdaBrandedFoodUsingFDCUsdaBrandedFood", testUsdaFoodOneToOneUsdaBrandedFoodUsingFDCUsdaBrandedFood)
	t.Run("UsdaFoodToUsdaFoundationFoodUsingFDCUsdaFoundationFood", testUsdaFoodOneToOneUsdaFoundationFoodUsingFDCUsdaFoundationFood)
	t.Run("UsdaFoodToUsdaMarketAcquisitionUsingFDCUsdaMarketAcquisition", testUsdaFoodOneToOneUsdaMarketAcquisitionUsingFDCUsdaMarketAcquisition)
	t.Run("UsdaFoodToUsdaSampleFoodUsingFDCUsdaSampleFood", testUsdaFoodOneToOneUsdaSampleFoodUsingFDCUsdaSampleFood)
	t.Run("UsdaFoodToUsdaSRLegacyFoodUsingFDCUsdaSRLegacyFood", testUsdaFoodOneToOneUsdaSRLegacyFoodUsingFDCUsdaSRLegacyFood)
	t.Run("UsdaFoodToUsdaSubSampleFoodUsingFDCUsdaSubSampleFood", testUsdaFoodOneToOneUsdaSubSampleFoodUsingFDCUsdaSubSampleFood)
	t.Run("UsdaFoodToUsdaSurveyFNDDSFoodUsingFDCUsdaSurveyFNDDSFood", testUsdaFoodOneToOneUsdaSurveyFNDDSFoodUsingFDCUsdaSurveyFNDDSFood)
	t.Run("UsdaFoodNutrientToUsdaSubSampleResultUsingFoodNutrientUsdaSubSampleResult", testUsdaFoodNutrientOneToOneUsdaSubSampleResultUsingFoodNutrientUsdaSubSampleResult)
	t.Run("UsdaFoodNutrientConversionFactorToUsdaFoodProteinConversionFactorUsingFoodNutrientConversionFactorUsdaFoodProteinConversionFactor", testUsdaFoodNutrientConversionFactorOneToOneUsdaFoodProteinConversionFactorUsingFoodNutrientConversionFactorUsdaFoodProteinConversionFactor)
}

// TestToMany tests cannot be run in parallel
// or deadlocks can occur.
func TestToMany(t *testing.T) {
	t.Run("GphotosAlbumToAlbumGphotosPhotos", testGphotosAlbumToManyAlbumGphotosPhotos)
	t.Run("GphotosPhotoToGphotoMealGphotos", testGphotosPhotoToManyGphotoMealGphotos)
	t.Run("ImageToGphotosPhotos", testImageToManyGphotosPhotos)
	t.Run("ImageToNotionImages", testImageToManyNotionImages)
	t.Run("IngredientToIngredientUnits", testIngredientToManyIngredientUnits)
	t.Run("IngredientToParentIngredients", testIngredientToManyParentIngredients)
	t.Run("IngredientToRecipeSectionIngredients", testIngredientToManyRecipeSectionIngredients)
	t.Run("MealToMealGphotos", testMealToManyMealGphotos)
	t.Run("MealToMealRecipes", testMealToManyMealRecipes)
	t.Run("MealToNotionRecipes", testMealToManyNotionRecipes)
	t.Run("NotionRecipeToPageNotionImages", testNotionRecipeToManyPageNotionImages)
	t.Run("NotionRecipeToMeals", testNotionRecipeToManyMeals)
	t.Run("RecipeDetailToRecipeSections", testRecipeDetailToManyRecipeSections)
	t.Run("RecipeSectionIngredientToSubstitutesForRecipeSectionIngredients", testRecipeSectionIngredientToManySubstitutesForRecipeSectionIngredients)
	t.Run("RecipeSectionToSectionRecipeSectionIngredients", testRecipeSectionToManySectionRecipeSectionIngredients)
	t.Run("RecipeSectionToSectionRecipeSectionInstructions", testRecipeSectionToManySectionRecipeSectionInstructions)
	t.Run("RecipeToHighlightRecipeMealGphotos", testRecipeToManyHighlightRecipeMealGphotos)
	t.Run("RecipeToMealRecipes", testRecipeToManyMealRecipes)
	t.Run("RecipeToNotionRecipes", testRecipeToManyNotionRecipes)
	t.Run("RecipeToRecipeSectionIngredients", testRecipeToManyRecipeSectionIngredients)
	t.Run("UsdaFoodToFDCIDOfSampleFoodUsdaFoods", testUsdaFoodToManyFDCIDOfSampleFoodUsdaFoods)
	t.Run("UsdaFoodToFDCIDOfAcquisitionFoodUsdaFoods", testUsdaFoodToManyFDCIDOfAcquisitionFoodUsdaFoods)
	t.Run("UsdaFoodToFDCUsdaFoodAttributes", testUsdaFoodToManyFDCUsdaFoodAttributes)
	t.Run("UsdaFoodToFDCUsdaFoodComponents", testUsdaFoodToManyFDCUsdaFoodComponents)
	t.Run("UsdaFoodToFDCUsdaFoodNutrientConversionFactors", testUsdaFoodToManyFDCUsdaFoodNutrientConversionFactors)
	t.Run("UsdaFoodToFDCUsdaFoodPortions", testUsdaFoodToManyFDCUsdaFoodPortions)
	t.Run("UsdaFoodToFDCUsdaInputFoods", testUsdaFoodToManyFDCUsdaInputFoods)
	t.Run("UsdaFoodToFDCIDOfInputFoodUsdaInputFoods", testUsdaFoodToManyFDCIDOfInputFoodUsdaInputFoods)
	t.Run("UsdaFoodToFDCIDOfSampleFoodUsdaSubSampleFoods", testUsdaFoodToManyFDCIDOfSampleFoodUsdaSubSampleFoods)
	t.Run("UsdaFoodAttributeTypeToFoodAttributeTypeUsdaFoodAttributes", testUsdaFoodAttributeTypeToManyFoodAttributeTypeUsdaFoodAttributes)
	t.Run("UsdaFoodCategoryToFoodGroupUsdaRetentionFactors", testUsdaFoodCategoryToManyFoodGroupUsdaRetentionFactors)
	t.Run("UsdaFoodNutrientDerivationToDerivationUsdaFoodNutrients", testUsdaFoodNutrientDerivationToManyDerivationUsdaFoodNutrients)
	t.Run("UsdaFoodNutrientSourceToSourceUsdaFoodNutrientDerivations", testUsdaFoodNutrientSourceToManySourceUsdaFoodNutrientDerivations)
	t.Run("UsdaLabMethodToLabMethodUsdaLabMethodCodes", testUsdaLabMethodToManyLabMethodUsdaLabMethodCodes)
	t.Run("UsdaLabMethodToLabMethodUsdaLabMethodNutrients", testUsdaLabMethodToManyLabMethodUsdaLabMethodNutrients)
	t.Run("UsdaLabMethodToLabMethodUsdaSubSampleResults", testUsdaLabMethodToManyLabMethodUsdaSubSampleResults)
	t.Run("UsdaMeasureUnitToMeasureUnitUsdaFoodPortions", testUsdaMeasureUnitToManyMeasureUnitUsdaFoodPortions)
	t.Run("UsdaNutrientToNutrientUsdaNutrientIncomingNames", testUsdaNutrientToManyNutrientUsdaNutrientIncomingNames)
	t.Run("UsdaWweiaFoodCategoryToWweiaCategoryCodeUsdaSurveyFNDDSFoods", testUsdaWweiaFoodCategoryToManyWweiaCategoryCodeUsdaSurveyFNDDSFoods)
}

// TestToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneSet(t *testing.T) {
	t.Run("GphotosPhotoToGphotosAlbumUsingAlbumGphotosPhotos", testGphotosPhotoToOneSetOpGphotosAlbumUsingAlbum)
	t.Run("GphotosPhotoToImageUsingGphotosPhotos", testGphotosPhotoToOneSetOpImageUsingGphotosPhotoImage)
	t.Run("IngredientUnitToIngredientUsingIngredientUnits", testIngredientUnitToOneSetOpIngredientUsingIngredientUnitIngredient)
	t.Run("IngredientToIngredientUsingParentIngredients", testIngredientToOneSetOpIngredientUsingParentIngredient)
	t.Run("MealGphotoToGphotosPhotoUsingGphotoMealGphotos", testMealGphotoToOneSetOpGphotosPhotoUsingGphoto)
	t.Run("MealGphotoToRecipeUsingHighlightRecipeMealGphotos", testMealGphotoToOneSetOpRecipeUsingHighlightRecipeRecipe)
	t.Run("MealGphotoToMealUsingMealGphotos", testMealGphotoToOneSetOpMealUsingMealGphotoMeal)
	t.Run("MealRecipeToMealUsingMealRecipes", testMealRecipeToOneSetOpMealUsingMeal)
	t.Run("MealRecipeToRecipeUsingMealRecipes", testMealRecipeToOneSetOpRecipeUsingRecipe)
	t.Run("NotionImageToImageUsingNotionImages", testNotionImageToOneSetOpImageUsingNotionImageImage)
	t.Run("NotionImageToNotionRecipeUsingPageNotionImages", testNotionImageToOneSetOpNotionRecipeUsingPage)
	t.Run("NotionRecipeToRecipeUsingNotionRecipes", testNotionRecipeToOneSetOpRecipeUsingNotionRecipeRecipe)
	t.Run("RecipeDetailToRecipeUsingRecipeDetail", testRecipeDetailToOneSetOpRecipeUsingRecipe)
	t.Run("RecipeSectionIngredientToIngredientUsingRecipeSectionIngredients", testRecipeSectionIngredientToOneSetOpIngredientUsingRecipeSectionIngredientIngredient)
	t.Run("RecipeSectionIngredientToRecipeUsingRecipeSectionIngredients", testRecipeSectionIngredientToOneSetOpRecipeUsingRecipeSectionIngredientRecipe)
	t.Run("RecipeSectionIngredientToRecipeSectionUsingSectionRecipeSectionIngredients", testRecipeSectionIngredientToOneSetOpRecipeSectionUsingSectionRecipeSection)
	t.Run("RecipeSectionIngredientToRecipeSectionIngredientUsingSubstitutesForRecipeSectionIngredients", testRecipeSectionIngredientToOneSetOpRecipeSectionIngredientUsingSubstitutesForRecipeSectionIngredient)
	t.Run("RecipeSectionInstructionToRecipeSectionUsingSectionRecipeSectionInstructions", testRecipeSectionInstructionToOneSetOpRecipeSectionUsingSectionRecipeSection)
	t.Run("RecipeSectionToRecipeDetailUsingRecipeSections", testRecipeSectionToOneSetOpRecipeDetailUsingRecipeSectionRecipeDetail)
	t.Run("UsdaBrandedFoodToUsdaFoodUsingFDCUsdaBrandedFood", testUsdaBrandedFoodToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodAttributeToUsdaFoodUsingFDCUsdaFoodAttributes", testUsdaFoodAttributeToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodAttributeToUsdaFoodAttributeTypeUsingFoodAttributeTypeUsdaFoodAttributes", testUsdaFoodAttributeToOneSetOpUsdaFoodAttributeTypeUsingFoodAttributeType)
	t.Run("UsdaFoodComponentToUsdaFoodUsingFDCUsdaFoodComponents", testUsdaFoodComponentToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodNutrientToUsdaFoodNutrientDerivationUsingDerivationUsdaFoodNutrients", testUsdaFoodNutrientToOneSetOpUsdaFoodNutrientDerivationUsingDerivation)
	t.Run("UsdaFoodNutrientConversionFactorToUsdaFoodUsingFDCUsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodNutrientDerivationToUsdaFoodNutrientSourceUsingSourceUsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationToOneSetOpUsdaFoodNutrientSourceUsingSource)
	t.Run("UsdaFoodPortionToUsdaFoodUsingFDCUsdaFoodPortions", testUsdaFoodPortionToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodPortionToUsdaMeasureUnitUsingMeasureUnitUsdaFoodPortions", testUsdaFoodPortionToOneSetOpUsdaMeasureUnitUsingMeasureUnit)
	t.Run("UsdaFoodProteinConversionFactorToUsdaFoodNutrientConversionFactorUsingFoodNutrientConversionFactorUsdaFoodProteinConversionFactor", testUsdaFoodProteinConversionFactorToOneSetOpUsdaFoodNutrientConversionFactorUsingFoodNutrientConversionFactor)
	t.Run("UsdaFoundationFoodToUsdaFoodUsingFDCUsdaFoundationFood", testUsdaFoundationFoodToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaInputFoodToUsdaFoodUsingFDCUsdaInputFoods", testUsdaInputFoodToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaInputFoodToUsdaFoodUsingFDCIDOfInputFoodUsdaInputFoods", testUsdaInputFoodToOneSetOpUsdaFoodUsingFDCIDOfInputFoodUsdaFood)
	t.Run("UsdaLabMethodCodeToUsdaLabMethodUsingLabMethodUsdaLabMethodCodes", testUsdaLabMethodCodeToOneSetOpUsdaLabMethodUsingLabMethod)
	t.Run("UsdaLabMethodNutrientToUsdaLabMethodUsingLabMethodUsdaLabMethodNutrients", testUsdaLabMethodNutrientToOneSetOpUsdaLabMethodUsingLabMethod)
	t.Run("UsdaMarketAcquisitionToUsdaFoodUsingFDCUsdaMarketAcquisition", testUsdaMarketAcquisitionToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaNutrientIncomingNameToUsdaNutrientUsingNutrientUsdaNutrientIncomingNames", testUsdaNutrientIncomingNameToOneSetOpUsdaNutrientUsingNutrient)
	t.Run("UsdaRetentionFactorToUsdaFoodCategoryUsingFoodGroupUsdaRetentionFactors", testUsdaRetentionFactorToOneSetOpUsdaFoodCategoryUsingFoodGroup)
	t.Run("UsdaSampleFoodToUsdaFoodUsingFDCUsdaSampleFood", testUsdaSampleFoodToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaSRLegacyFoodToUsdaFoodUsingFDCUsdaSRLegacyFood", testUsdaSRLegacyFoodToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaSubSampleFoodToUsdaFoodUsingFDCUsdaSubSampleFood", testUsdaSubSampleFoodToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaSubSampleFoodToUsdaFoodUsingFDCIDOfSampleFoodUsdaSubSampleFoods", testUsdaSubSampleFoodToOneSetOpUsdaFoodUsingFDCIDOfSampleFoodUsdaFood)
	t.Run("UsdaSubSampleResultToUsdaFoodNutrientUsingFoodNutrientUsdaSubSampleResult", testUsdaSubSampleResultToOneSetOpUsdaFoodNutrientUsingFoodNutrient)
	t.Run("UsdaSubSampleResultToUsdaLabMethodUsingLabMethodUsdaSubSampleResults", testUsdaSubSampleResultToOneSetOpUsdaLabMethodUsingLabMethod)
	t.Run("UsdaSurveyFNDDSFoodToUsdaFoodUsingFDCUsdaSurveyFNDDSFood", testUsdaSurveyFNDDSFoodToOneSetOpUsdaFoodUsingFDC)
	t.Run("UsdaSurveyFNDDSFoodToUsdaWweiaFoodCategoryUsingWweiaCategoryCodeUsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodToOneSetOpUsdaWweiaFoodCategoryUsingWweiaCategoryCodeUsdaWweiaFoodCategory)
}

// TestToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToOneRemove(t *testing.T) {
	t.Run("IngredientToIngredientUsingParentIngredients", testIngredientToOneRemoveOpIngredientUsingParentIngredient)
	t.Run("MealGphotoToRecipeUsingHighlightRecipeMealGphotos", testMealGphotoToOneRemoveOpRecipeUsingHighlightRecipeRecipe)
	t.Run("NotionRecipeToRecipeUsingNotionRecipes", testNotionRecipeToOneRemoveOpRecipeUsingNotionRecipeRecipe)
	t.Run("RecipeSectionIngredientToIngredientUsingRecipeSectionIngredients", testRecipeSectionIngredientToOneRemoveOpIngredientUsingRecipeSectionIngredientIngredient)
	t.Run("RecipeSectionIngredientToRecipeUsingRecipeSectionIngredients", testRecipeSectionIngredientToOneRemoveOpRecipeUsingRecipeSectionIngredientRecipe)
	t.Run("RecipeSectionIngredientToRecipeSectionIngredientUsingSubstitutesForRecipeSectionIngredients", testRecipeSectionIngredientToOneRemoveOpRecipeSectionIngredientUsingSubstitutesForRecipeSectionIngredient)
	t.Run("UsdaFoodAttributeToUsdaFoodUsingFDCUsdaFoodAttributes", testUsdaFoodAttributeToOneRemoveOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodAttributeToUsdaFoodAttributeTypeUsingFoodAttributeTypeUsdaFoodAttributes", testUsdaFoodAttributeToOneRemoveOpUsdaFoodAttributeTypeUsingFoodAttributeType)
	t.Run("UsdaFoodComponentToUsdaFoodUsingFDCUsdaFoodComponents", testUsdaFoodComponentToOneRemoveOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodNutrientToUsdaFoodNutrientDerivationUsingDerivationUsdaFoodNutrients", testUsdaFoodNutrientToOneRemoveOpUsdaFoodNutrientDerivationUsingDerivation)
	t.Run("UsdaFoodNutrientConversionFactorToUsdaFoodUsingFDCUsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorToOneRemoveOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodNutrientDerivationToUsdaFoodNutrientSourceUsingSourceUsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationToOneRemoveOpUsdaFoodNutrientSourceUsingSource)
	t.Run("UsdaFoodPortionToUsdaFoodUsingFDCUsdaFoodPortions", testUsdaFoodPortionToOneRemoveOpUsdaFoodUsingFDC)
	t.Run("UsdaFoodPortionToUsdaMeasureUnitUsingMeasureUnitUsdaFoodPortions", testUsdaFoodPortionToOneRemoveOpUsdaMeasureUnitUsingMeasureUnit)
	t.Run("UsdaInputFoodToUsdaFoodUsingFDCUsdaInputFoods", testUsdaInputFoodToOneRemoveOpUsdaFoodUsingFDC)
	t.Run("UsdaInputFoodToUsdaFoodUsingFDCIDOfInputFoodUsdaInputFoods", testUsdaInputFoodToOneRemoveOpUsdaFoodUsingFDCIDOfInputFoodUsdaFood)
	t.Run("UsdaLabMethodCodeToUsdaLabMethodUsingLabMethodUsdaLabMethodCodes", testUsdaLabMethodCodeToOneRemoveOpUsdaLabMethodUsingLabMethod)
	t.Run("UsdaLabMethodNutrientToUsdaLabMethodUsingLabMethodUsdaLabMethodNutrients", testUsdaLabMethodNutrientToOneRemoveOpUsdaLabMethodUsingLabMethod)
	t.Run("UsdaNutrientIncomingNameToUsdaNutrientUsingNutrientUsdaNutrientIncomingNames", testUsdaNutrientIncomingNameToOneRemoveOpUsdaNutrientUsingNutrient)
	t.Run("UsdaRetentionFactorToUsdaFoodCategoryUsingFoodGroupUsdaRetentionFactors", testUsdaRetentionFactorToOneRemoveOpUsdaFoodCategoryUsingFoodGroup)
	t.Run("UsdaSubSampleFoodToUsdaFoodUsingFDCIDOfSampleFoodUsdaSubSampleFoods", testUsdaSubSampleFoodToOneRemoveOpUsdaFoodUsingFDCIDOfSampleFoodUsdaFood)
	t.Run("UsdaSubSampleResultToUsdaLabMethodUsingLabMethodUsdaSubSampleResults", testUsdaSubSampleResultToOneRemoveOpUsdaLabMethodUsingLabMethod)
	t.Run("UsdaSurveyFNDDSFoodToUsdaWweiaFoodCategoryUsingWweiaCategoryCodeUsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodToOneRemoveOpUsdaWweiaFoodCategoryUsingWweiaCategoryCodeUsdaWweiaFoodCategory)
}

// TestOneToOneSet tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneSet(t *testing.T) {
	t.Run("RecipeToRecipeDetailUsingRecipeDetail", testRecipeOneToOneSetOpRecipeDetailUsingRecipeDetail)
	t.Run("UsdaFoodToUsdaBrandedFoodUsingFDCUsdaBrandedFood", testUsdaFoodOneToOneSetOpUsdaBrandedFoodUsingFDCUsdaBrandedFood)
	t.Run("UsdaFoodToUsdaFoundationFoodUsingFDCUsdaFoundationFood", testUsdaFoodOneToOneSetOpUsdaFoundationFoodUsingFDCUsdaFoundationFood)
	t.Run("UsdaFoodToUsdaMarketAcquisitionUsingFDCUsdaMarketAcquisition", testUsdaFoodOneToOneSetOpUsdaMarketAcquisitionUsingFDCUsdaMarketAcquisition)
	t.Run("UsdaFoodToUsdaSampleFoodUsingFDCUsdaSampleFood", testUsdaFoodOneToOneSetOpUsdaSampleFoodUsingFDCUsdaSampleFood)
	t.Run("UsdaFoodToUsdaSRLegacyFoodUsingFDCUsdaSRLegacyFood", testUsdaFoodOneToOneSetOpUsdaSRLegacyFoodUsingFDCUsdaSRLegacyFood)
	t.Run("UsdaFoodToUsdaSubSampleFoodUsingFDCUsdaSubSampleFood", testUsdaFoodOneToOneSetOpUsdaSubSampleFoodUsingFDCUsdaSubSampleFood)
	t.Run("UsdaFoodToUsdaSurveyFNDDSFoodUsingFDCUsdaSurveyFNDDSFood", testUsdaFoodOneToOneSetOpUsdaSurveyFNDDSFoodUsingFDCUsdaSurveyFNDDSFood)
	t.Run("UsdaFoodNutrientToUsdaSubSampleResultUsingFoodNutrientUsdaSubSampleResult", testUsdaFoodNutrientOneToOneSetOpUsdaSubSampleResultUsingFoodNutrientUsdaSubSampleResult)
	t.Run("UsdaFoodNutrientConversionFactorToUsdaFoodProteinConversionFactorUsingFoodNutrientConversionFactorUsdaFoodProteinConversionFactor", testUsdaFoodNutrientConversionFactorOneToOneSetOpUsdaFoodProteinConversionFactorUsingFoodNutrientConversionFactorUsdaFoodProteinConversionFactor)
}

// TestOneToOneRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestOneToOneRemove(t *testing.T) {}

// TestToManyAdd tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyAdd(t *testing.T) {
	t.Run("GphotosAlbumToAlbumGphotosPhotos", testGphotosAlbumToManyAddOpAlbumGphotosPhotos)
	t.Run("GphotosPhotoToGphotoMealGphotos", testGphotosPhotoToManyAddOpGphotoMealGphotos)
	t.Run("ImageToGphotosPhotos", testImageToManyAddOpGphotosPhotos)
	t.Run("ImageToNotionImages", testImageToManyAddOpNotionImages)
	t.Run("IngredientToIngredientUnits", testIngredientToManyAddOpIngredientUnits)
	t.Run("IngredientToParentIngredients", testIngredientToManyAddOpParentIngredients)
	t.Run("IngredientToRecipeSectionIngredients", testIngredientToManyAddOpRecipeSectionIngredients)
	t.Run("MealToMealGphotos", testMealToManyAddOpMealGphotos)
	t.Run("MealToMealRecipes", testMealToManyAddOpMealRecipes)
	t.Run("MealToNotionRecipes", testMealToManyAddOpNotionRecipes)
	t.Run("NotionRecipeToPageNotionImages", testNotionRecipeToManyAddOpPageNotionImages)
	t.Run("NotionRecipeToMeals", testNotionRecipeToManyAddOpMeals)
	t.Run("RecipeDetailToRecipeSections", testRecipeDetailToManyAddOpRecipeSections)
	t.Run("RecipeSectionIngredientToSubstitutesForRecipeSectionIngredients", testRecipeSectionIngredientToManyAddOpSubstitutesForRecipeSectionIngredients)
	t.Run("RecipeSectionToSectionRecipeSectionIngredients", testRecipeSectionToManyAddOpSectionRecipeSectionIngredients)
	t.Run("RecipeSectionToSectionRecipeSectionInstructions", testRecipeSectionToManyAddOpSectionRecipeSectionInstructions)
	t.Run("RecipeToHighlightRecipeMealGphotos", testRecipeToManyAddOpHighlightRecipeMealGphotos)
	t.Run("RecipeToMealRecipes", testRecipeToManyAddOpMealRecipes)
	t.Run("RecipeToNotionRecipes", testRecipeToManyAddOpNotionRecipes)
	t.Run("RecipeToRecipeSectionIngredients", testRecipeToManyAddOpRecipeSectionIngredients)
	t.Run("UsdaFoodToFDCIDOfSampleFoodUsdaFoods", testUsdaFoodToManyAddOpFDCIDOfSampleFoodUsdaFoods)
	t.Run("UsdaFoodToFDCIDOfAcquisitionFoodUsdaFoods", testUsdaFoodToManyAddOpFDCIDOfAcquisitionFoodUsdaFoods)
	t.Run("UsdaFoodToFDCUsdaFoodAttributes", testUsdaFoodToManyAddOpFDCUsdaFoodAttributes)
	t.Run("UsdaFoodToFDCUsdaFoodComponents", testUsdaFoodToManyAddOpFDCUsdaFoodComponents)
	t.Run("UsdaFoodToFDCUsdaFoodNutrientConversionFactors", testUsdaFoodToManyAddOpFDCUsdaFoodNutrientConversionFactors)
	t.Run("UsdaFoodToFDCUsdaFoodPortions", testUsdaFoodToManyAddOpFDCUsdaFoodPortions)
	t.Run("UsdaFoodToFDCUsdaInputFoods", testUsdaFoodToManyAddOpFDCUsdaInputFoods)
	t.Run("UsdaFoodToFDCIDOfInputFoodUsdaInputFoods", testUsdaFoodToManyAddOpFDCIDOfInputFoodUsdaInputFoods)
	t.Run("UsdaFoodToFDCIDOfSampleFoodUsdaSubSampleFoods", testUsdaFoodToManyAddOpFDCIDOfSampleFoodUsdaSubSampleFoods)
	t.Run("UsdaFoodAttributeTypeToFoodAttributeTypeUsdaFoodAttributes", testUsdaFoodAttributeTypeToManyAddOpFoodAttributeTypeUsdaFoodAttributes)
	t.Run("UsdaFoodCategoryToFoodGroupUsdaRetentionFactors", testUsdaFoodCategoryToManyAddOpFoodGroupUsdaRetentionFactors)
	t.Run("UsdaFoodNutrientDerivationToDerivationUsdaFoodNutrients", testUsdaFoodNutrientDerivationToManyAddOpDerivationUsdaFoodNutrients)
	t.Run("UsdaFoodNutrientSourceToSourceUsdaFoodNutrientDerivations", testUsdaFoodNutrientSourceToManyAddOpSourceUsdaFoodNutrientDerivations)
	t.Run("UsdaLabMethodToLabMethodUsdaLabMethodCodes", testUsdaLabMethodToManyAddOpLabMethodUsdaLabMethodCodes)
	t.Run("UsdaLabMethodToLabMethodUsdaLabMethodNutrients", testUsdaLabMethodToManyAddOpLabMethodUsdaLabMethodNutrients)
	t.Run("UsdaLabMethodToLabMethodUsdaSubSampleResults", testUsdaLabMethodToManyAddOpLabMethodUsdaSubSampleResults)
	t.Run("UsdaMeasureUnitToMeasureUnitUsdaFoodPortions", testUsdaMeasureUnitToManyAddOpMeasureUnitUsdaFoodPortions)
	t.Run("UsdaNutrientToNutrientUsdaNutrientIncomingNames", testUsdaNutrientToManyAddOpNutrientUsdaNutrientIncomingNames)
	t.Run("UsdaWweiaFoodCategoryToWweiaCategoryCodeUsdaSurveyFNDDSFoods", testUsdaWweiaFoodCategoryToManyAddOpWweiaCategoryCodeUsdaSurveyFNDDSFoods)
}

// TestToManySet tests cannot be run in parallel
// or deadlocks can occur.
func TestToManySet(t *testing.T) {
	t.Run("IngredientToParentIngredients", testIngredientToManySetOpParentIngredients)
	t.Run("IngredientToRecipeSectionIngredients", testIngredientToManySetOpRecipeSectionIngredients)
	t.Run("MealToNotionRecipes", testMealToManySetOpNotionRecipes)
	t.Run("NotionRecipeToMeals", testNotionRecipeToManySetOpMeals)
	t.Run("RecipeSectionIngredientToSubstitutesForRecipeSectionIngredients", testRecipeSectionIngredientToManySetOpSubstitutesForRecipeSectionIngredients)
	t.Run("RecipeToHighlightRecipeMealGphotos", testRecipeToManySetOpHighlightRecipeMealGphotos)
	t.Run("RecipeToNotionRecipes", testRecipeToManySetOpNotionRecipes)
	t.Run("RecipeToRecipeSectionIngredients", testRecipeToManySetOpRecipeSectionIngredients)
	t.Run("UsdaFoodToFDCIDOfSampleFoodUsdaFoods", testUsdaFoodToManySetOpFDCIDOfSampleFoodUsdaFoods)
	t.Run("UsdaFoodToFDCIDOfAcquisitionFoodUsdaFoods", testUsdaFoodToManySetOpFDCIDOfAcquisitionFoodUsdaFoods)
	t.Run("UsdaFoodToFDCUsdaFoodAttributes", testUsdaFoodToManySetOpFDCUsdaFoodAttributes)
	t.Run("UsdaFoodToFDCUsdaFoodComponents", testUsdaFoodToManySetOpFDCUsdaFoodComponents)
	t.Run("UsdaFoodToFDCUsdaFoodNutrientConversionFactors", testUsdaFoodToManySetOpFDCUsdaFoodNutrientConversionFactors)
	t.Run("UsdaFoodToFDCUsdaFoodPortions", testUsdaFoodToManySetOpFDCUsdaFoodPortions)
	t.Run("UsdaFoodToFDCUsdaInputFoods", testUsdaFoodToManySetOpFDCUsdaInputFoods)
	t.Run("UsdaFoodToFDCIDOfInputFoodUsdaInputFoods", testUsdaFoodToManySetOpFDCIDOfInputFoodUsdaInputFoods)
	t.Run("UsdaFoodToFDCIDOfSampleFoodUsdaSubSampleFoods", testUsdaFoodToManySetOpFDCIDOfSampleFoodUsdaSubSampleFoods)
	t.Run("UsdaFoodAttributeTypeToFoodAttributeTypeUsdaFoodAttributes", testUsdaFoodAttributeTypeToManySetOpFoodAttributeTypeUsdaFoodAttributes)
	t.Run("UsdaFoodCategoryToFoodGroupUsdaRetentionFactors", testUsdaFoodCategoryToManySetOpFoodGroupUsdaRetentionFactors)
	t.Run("UsdaFoodNutrientDerivationToDerivationUsdaFoodNutrients", testUsdaFoodNutrientDerivationToManySetOpDerivationUsdaFoodNutrients)
	t.Run("UsdaFoodNutrientSourceToSourceUsdaFoodNutrientDerivations", testUsdaFoodNutrientSourceToManySetOpSourceUsdaFoodNutrientDerivations)
	t.Run("UsdaLabMethodToLabMethodUsdaLabMethodCodes", testUsdaLabMethodToManySetOpLabMethodUsdaLabMethodCodes)
	t.Run("UsdaLabMethodToLabMethodUsdaLabMethodNutrients", testUsdaLabMethodToManySetOpLabMethodUsdaLabMethodNutrients)
	t.Run("UsdaLabMethodToLabMethodUsdaSubSampleResults", testUsdaLabMethodToManySetOpLabMethodUsdaSubSampleResults)
	t.Run("UsdaMeasureUnitToMeasureUnitUsdaFoodPortions", testUsdaMeasureUnitToManySetOpMeasureUnitUsdaFoodPortions)
	t.Run("UsdaNutrientToNutrientUsdaNutrientIncomingNames", testUsdaNutrientToManySetOpNutrientUsdaNutrientIncomingNames)
	t.Run("UsdaWweiaFoodCategoryToWweiaCategoryCodeUsdaSurveyFNDDSFoods", testUsdaWweiaFoodCategoryToManySetOpWweiaCategoryCodeUsdaSurveyFNDDSFoods)
}

// TestToManyRemove tests cannot be run in parallel
// or deadlocks can occur.
func TestToManyRemove(t *testing.T) {
	t.Run("IngredientToParentIngredients", testIngredientToManyRemoveOpParentIngredients)
	t.Run("IngredientToRecipeSectionIngredients", testIngredientToManyRemoveOpRecipeSectionIngredients)
	t.Run("MealToNotionRecipes", testMealToManyRemoveOpNotionRecipes)
	t.Run("NotionRecipeToMeals", testNotionRecipeToManyRemoveOpMeals)
	t.Run("RecipeSectionIngredientToSubstitutesForRecipeSectionIngredients", testRecipeSectionIngredientToManyRemoveOpSubstitutesForRecipeSectionIngredients)
	t.Run("RecipeToHighlightRecipeMealGphotos", testRecipeToManyRemoveOpHighlightRecipeMealGphotos)
	t.Run("RecipeToNotionRecipes", testRecipeToManyRemoveOpNotionRecipes)
	t.Run("RecipeToRecipeSectionIngredients", testRecipeToManyRemoveOpRecipeSectionIngredients)
	t.Run("UsdaFoodToFDCIDOfSampleFoodUsdaFoods", testUsdaFoodToManyRemoveOpFDCIDOfSampleFoodUsdaFoods)
	t.Run("UsdaFoodToFDCIDOfAcquisitionFoodUsdaFoods", testUsdaFoodToManyRemoveOpFDCIDOfAcquisitionFoodUsdaFoods)
	t.Run("UsdaFoodToFDCUsdaFoodAttributes", testUsdaFoodToManyRemoveOpFDCUsdaFoodAttributes)
	t.Run("UsdaFoodToFDCUsdaFoodComponents", testUsdaFoodToManyRemoveOpFDCUsdaFoodComponents)
	t.Run("UsdaFoodToFDCUsdaFoodNutrientConversionFactors", testUsdaFoodToManyRemoveOpFDCUsdaFoodNutrientConversionFactors)
	t.Run("UsdaFoodToFDCUsdaFoodPortions", testUsdaFoodToManyRemoveOpFDCUsdaFoodPortions)
	t.Run("UsdaFoodToFDCUsdaInputFoods", testUsdaFoodToManyRemoveOpFDCUsdaInputFoods)
	t.Run("UsdaFoodToFDCIDOfInputFoodUsdaInputFoods", testUsdaFoodToManyRemoveOpFDCIDOfInputFoodUsdaInputFoods)
	t.Run("UsdaFoodToFDCIDOfSampleFoodUsdaSubSampleFoods", testUsdaFoodToManyRemoveOpFDCIDOfSampleFoodUsdaSubSampleFoods)
	t.Run("UsdaFoodAttributeTypeToFoodAttributeTypeUsdaFoodAttributes", testUsdaFoodAttributeTypeToManyRemoveOpFoodAttributeTypeUsdaFoodAttributes)
	t.Run("UsdaFoodCategoryToFoodGroupUsdaRetentionFactors", testUsdaFoodCategoryToManyRemoveOpFoodGroupUsdaRetentionFactors)
	t.Run("UsdaFoodNutrientDerivationToDerivationUsdaFoodNutrients", testUsdaFoodNutrientDerivationToManyRemoveOpDerivationUsdaFoodNutrients)
	t.Run("UsdaFoodNutrientSourceToSourceUsdaFoodNutrientDerivations", testUsdaFoodNutrientSourceToManyRemoveOpSourceUsdaFoodNutrientDerivations)
	t.Run("UsdaLabMethodToLabMethodUsdaLabMethodCodes", testUsdaLabMethodToManyRemoveOpLabMethodUsdaLabMethodCodes)
	t.Run("UsdaLabMethodToLabMethodUsdaLabMethodNutrients", testUsdaLabMethodToManyRemoveOpLabMethodUsdaLabMethodNutrients)
	t.Run("UsdaLabMethodToLabMethodUsdaSubSampleResults", testUsdaLabMethodToManyRemoveOpLabMethodUsdaSubSampleResults)
	t.Run("UsdaMeasureUnitToMeasureUnitUsdaFoodPortions", testUsdaMeasureUnitToManyRemoveOpMeasureUnitUsdaFoodPortions)
	t.Run("UsdaNutrientToNutrientUsdaNutrientIncomingNames", testUsdaNutrientToManyRemoveOpNutrientUsdaNutrientIncomingNames)
	t.Run("UsdaWweiaFoodCategoryToWweiaCategoryCodeUsdaSurveyFNDDSFoods", testUsdaWweiaFoodCategoryToManyRemoveOpWweiaCategoryCodeUsdaSurveyFNDDSFoods)
}

func TestReload(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsReload)
	t.Run("GphotosPhotos", testGphotosPhotosReload)
	t.Run("Images", testImagesReload)
	t.Run("IngredientUnits", testIngredientUnitsReload)
	t.Run("Ingredients", testIngredientsReload)
	t.Run("KVS", testKVSReload)
	t.Run("MealGphotos", testMealGphotosReload)
	t.Run("MealRecipes", testMealRecipesReload)
	t.Run("Meals", testMealsReload)
	t.Run("NotionImages", testNotionImagesReload)
	t.Run("NotionRecipes", testNotionRecipesReload)
	t.Run("RecipeDetails", testRecipeDetailsReload)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsReload)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsReload)
	t.Run("RecipeSections", testRecipeSectionsReload)
	t.Run("Recipes", testRecipesReload)
	t.Run("SchemaMigrations", testSchemaMigrationsReload)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsReload)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsReload)
	t.Run("UsdaFoods", testUsdaFoodsReload)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesReload)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesReload)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsReload)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesReload)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsReload)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsReload)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsReload)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsReload)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesReload)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsReload)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsReload)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsReload)
	t.Run("UsdaInputFoods", testUsdaInputFoodsReload)
	t.Run("UsdaLabMethods", testUsdaLabMethodsReload)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesReload)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsReload)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsReload)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsReload)
	t.Run("UsdaNutrients", testUsdaNutrientsReload)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesReload)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsReload)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsReload)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsReload)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsReload)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsReload)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsReload)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesReload)
}

func TestReloadAll(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsReloadAll)
	t.Run("GphotosPhotos", testGphotosPhotosReloadAll)
	t.Run("Images", testImagesReloadAll)
	t.Run("IngredientUnits", testIngredientUnitsReloadAll)
	t.Run("Ingredients", testIngredientsReloadAll)
	t.Run("KVS", testKVSReloadAll)
	t.Run("MealGphotos", testMealGphotosReloadAll)
	t.Run("MealRecipes", testMealRecipesReloadAll)
	t.Run("Meals", testMealsReloadAll)
	t.Run("NotionImages", testNotionImagesReloadAll)
	t.Run("NotionRecipes", testNotionRecipesReloadAll)
	t.Run("RecipeDetails", testRecipeDetailsReloadAll)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsReloadAll)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsReloadAll)
	t.Run("RecipeSections", testRecipeSectionsReloadAll)
	t.Run("Recipes", testRecipesReloadAll)
	t.Run("SchemaMigrations", testSchemaMigrationsReloadAll)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsReloadAll)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsReloadAll)
	t.Run("UsdaFoods", testUsdaFoodsReloadAll)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesReloadAll)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesReloadAll)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsReloadAll)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesReloadAll)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsReloadAll)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsReloadAll)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsReloadAll)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsReloadAll)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesReloadAll)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsReloadAll)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsReloadAll)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsReloadAll)
	t.Run("UsdaInputFoods", testUsdaInputFoodsReloadAll)
	t.Run("UsdaLabMethods", testUsdaLabMethodsReloadAll)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesReloadAll)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsReloadAll)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsReloadAll)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsReloadAll)
	t.Run("UsdaNutrients", testUsdaNutrientsReloadAll)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesReloadAll)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsReloadAll)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsReloadAll)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsReloadAll)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsReloadAll)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsReloadAll)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsReloadAll)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesReloadAll)
}

func TestSelect(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsSelect)
	t.Run("GphotosPhotos", testGphotosPhotosSelect)
	t.Run("Images", testImagesSelect)
	t.Run("IngredientUnits", testIngredientUnitsSelect)
	t.Run("Ingredients", testIngredientsSelect)
	t.Run("KVS", testKVSSelect)
	t.Run("MealGphotos", testMealGphotosSelect)
	t.Run("MealRecipes", testMealRecipesSelect)
	t.Run("Meals", testMealsSelect)
	t.Run("NotionImages", testNotionImagesSelect)
	t.Run("NotionRecipes", testNotionRecipesSelect)
	t.Run("RecipeDetails", testRecipeDetailsSelect)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsSelect)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsSelect)
	t.Run("RecipeSections", testRecipeSectionsSelect)
	t.Run("Recipes", testRecipesSelect)
	t.Run("SchemaMigrations", testSchemaMigrationsSelect)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsSelect)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsSelect)
	t.Run("UsdaFoods", testUsdaFoodsSelect)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesSelect)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesSelect)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsSelect)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesSelect)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsSelect)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsSelect)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsSelect)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsSelect)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesSelect)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsSelect)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsSelect)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsSelect)
	t.Run("UsdaInputFoods", testUsdaInputFoodsSelect)
	t.Run("UsdaLabMethods", testUsdaLabMethodsSelect)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesSelect)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsSelect)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsSelect)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsSelect)
	t.Run("UsdaNutrients", testUsdaNutrientsSelect)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesSelect)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsSelect)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsSelect)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsSelect)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsSelect)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsSelect)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsSelect)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesSelect)
}

func TestUpdate(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsUpdate)
	t.Run("GphotosPhotos", testGphotosPhotosUpdate)
	t.Run("Images", testImagesUpdate)
	t.Run("IngredientUnits", testIngredientUnitsUpdate)
	t.Run("Ingredients", testIngredientsUpdate)
	t.Run("KVS", testKVSUpdate)
	t.Run("MealGphotos", testMealGphotosUpdate)
	t.Run("MealRecipes", testMealRecipesUpdate)
	t.Run("Meals", testMealsUpdate)
	t.Run("NotionImages", testNotionImagesUpdate)
	t.Run("NotionRecipes", testNotionRecipesUpdate)
	t.Run("RecipeDetails", testRecipeDetailsUpdate)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsUpdate)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsUpdate)
	t.Run("RecipeSections", testRecipeSectionsUpdate)
	t.Run("Recipes", testRecipesUpdate)
	t.Run("SchemaMigrations", testSchemaMigrationsUpdate)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsUpdate)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsUpdate)
	t.Run("UsdaFoods", testUsdaFoodsUpdate)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesUpdate)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesUpdate)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsUpdate)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesUpdate)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsUpdate)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsUpdate)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsUpdate)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsUpdate)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesUpdate)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsUpdate)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsUpdate)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsUpdate)
	t.Run("UsdaInputFoods", testUsdaInputFoodsUpdate)
	t.Run("UsdaLabMethods", testUsdaLabMethodsUpdate)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesUpdate)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsUpdate)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsUpdate)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsUpdate)
	t.Run("UsdaNutrients", testUsdaNutrientsUpdate)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesUpdate)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsUpdate)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsUpdate)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsUpdate)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsUpdate)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsUpdate)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsUpdate)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesUpdate)
}

func TestSliceUpdateAll(t *testing.T) {
	t.Run("GphotosAlbums", testGphotosAlbumsSliceUpdateAll)
	t.Run("GphotosPhotos", testGphotosPhotosSliceUpdateAll)
	t.Run("Images", testImagesSliceUpdateAll)
	t.Run("IngredientUnits", testIngredientUnitsSliceUpdateAll)
	t.Run("Ingredients", testIngredientsSliceUpdateAll)
	t.Run("KVS", testKVSSliceUpdateAll)
	t.Run("MealGphotos", testMealGphotosSliceUpdateAll)
	t.Run("MealRecipes", testMealRecipesSliceUpdateAll)
	t.Run("Meals", testMealsSliceUpdateAll)
	t.Run("NotionImages", testNotionImagesSliceUpdateAll)
	t.Run("NotionRecipes", testNotionRecipesSliceUpdateAll)
	t.Run("RecipeDetails", testRecipeDetailsSliceUpdateAll)
	t.Run("RecipeSectionIngredients", testRecipeSectionIngredientsSliceUpdateAll)
	t.Run("RecipeSectionInstructions", testRecipeSectionInstructionsSliceUpdateAll)
	t.Run("RecipeSections", testRecipeSectionsSliceUpdateAll)
	t.Run("Recipes", testRecipesSliceUpdateAll)
	t.Run("SchemaMigrations", testSchemaMigrationsSliceUpdateAll)
	t.Run("UsdaAgriculturalAcquisitions", testUsdaAgriculturalAcquisitionsSliceUpdateAll)
	t.Run("UsdaBrandedFoods", testUsdaBrandedFoodsSliceUpdateAll)
	t.Run("UsdaFoods", testUsdaFoodsSliceUpdateAll)
	t.Run("UsdaFoodAttributes", testUsdaFoodAttributesSliceUpdateAll)
	t.Run("UsdaFoodAttributeTypes", testUsdaFoodAttributeTypesSliceUpdateAll)
	t.Run("UsdaFoodCalorieConversionFactors", testUsdaFoodCalorieConversionFactorsSliceUpdateAll)
	t.Run("UsdaFoodCategories", testUsdaFoodCategoriesSliceUpdateAll)
	t.Run("UsdaFoodComponents", testUsdaFoodComponentsSliceUpdateAll)
	t.Run("UsdaFoodNutrients", testUsdaFoodNutrientsSliceUpdateAll)
	t.Run("UsdaFoodNutrientConversionFactors", testUsdaFoodNutrientConversionFactorsSliceUpdateAll)
	t.Run("UsdaFoodNutrientDerivations", testUsdaFoodNutrientDerivationsSliceUpdateAll)
	t.Run("UsdaFoodNutrientSources", testUsdaFoodNutrientSourcesSliceUpdateAll)
	t.Run("UsdaFoodPortions", testUsdaFoodPortionsSliceUpdateAll)
	t.Run("UsdaFoodProteinConversionFactors", testUsdaFoodProteinConversionFactorsSliceUpdateAll)
	t.Run("UsdaFoundationFoods", testUsdaFoundationFoodsSliceUpdateAll)
	t.Run("UsdaInputFoods", testUsdaInputFoodsSliceUpdateAll)
	t.Run("UsdaLabMethods", testUsdaLabMethodsSliceUpdateAll)
	t.Run("UsdaLabMethodCodes", testUsdaLabMethodCodesSliceUpdateAll)
	t.Run("UsdaLabMethodNutrients", testUsdaLabMethodNutrientsSliceUpdateAll)
	t.Run("UsdaMarketAcquisitions", testUsdaMarketAcquisitionsSliceUpdateAll)
	t.Run("UsdaMeasureUnits", testUsdaMeasureUnitsSliceUpdateAll)
	t.Run("UsdaNutrients", testUsdaNutrientsSliceUpdateAll)
	t.Run("UsdaNutrientIncomingNames", testUsdaNutrientIncomingNamesSliceUpdateAll)
	t.Run("UsdaRetentionFactors", testUsdaRetentionFactorsSliceUpdateAll)
	t.Run("UsdaSampleFoods", testUsdaSampleFoodsSliceUpdateAll)
	t.Run("UsdaSRLegacyFoods", testUsdaSRLegacyFoodsSliceUpdateAll)
	t.Run("UsdaSubSampleFoods", testUsdaSubSampleFoodsSliceUpdateAll)
	t.Run("UsdaSubSampleResults", testUsdaSubSampleResultsSliceUpdateAll)
	t.Run("UsdaSurveyFNDDSFoods", testUsdaSurveyFNDDSFoodsSliceUpdateAll)
	t.Run("UsdaWweiaFoodCategories", testUsdaWweiaFoodCategoriesSliceUpdateAll)
}
