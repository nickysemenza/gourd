/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FoodAttribute } from './FoodAttribute';
import {
    FoodAttributeFromJSON,
    FoodAttributeFromJSONTyped,
    FoodAttributeToJSON,
} from './FoodAttribute';
import type { FoodPortion } from './FoodPortion';
import {
    FoodPortionFromJSON,
    FoodPortionFromJSONTyped,
    FoodPortionToJSON,
} from './FoodPortion';
import type { InputFoodSurvey } from './InputFoodSurvey';
import {
    InputFoodSurveyFromJSON,
    InputFoodSurveyFromJSONTyped,
    InputFoodSurveyToJSON,
} from './InputFoodSurvey';
import type { WweiaFoodCategory } from './WweiaFoodCategory';
import {
    WweiaFoodCategoryFromJSON,
    WweiaFoodCategoryFromJSONTyped,
    WweiaFoodCategoryToJSON,
} from './WweiaFoodCategory';

/**
 * 
 * @export
 * @interface SurveyFoodItem
 */
export interface SurveyFoodItem {
    /**
     * 
     * @type {number}
     * @memberof SurveyFoodItem
     */
    fdc_id: number;
    /**
     * 
     * @type {string}
     * @memberof SurveyFoodItem
     */
    data_type: string;
    /**
     * 
     * @type {string}
     * @memberof SurveyFoodItem
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof SurveyFoodItem
     */
    end_date?: string;
    /**
     * 
     * @type {string}
     * @memberof SurveyFoodItem
     */
    food_class?: string;
    /**
     * 
     * @type {string}
     * @memberof SurveyFoodItem
     */
    food_code?: string;
    /**
     * 
     * @type {string}
     * @memberof SurveyFoodItem
     */
    publication_date?: string;
    /**
     * 
     * @type {string}
     * @memberof SurveyFoodItem
     */
    start_date?: string;
    /**
     * 
     * @type {Array<FoodAttribute>}
     * @memberof SurveyFoodItem
     */
    food_attributes?: Array<FoodAttribute>;
    /**
     * 
     * @type {Array<FoodPortion>}
     * @memberof SurveyFoodItem
     */
    food_portions?: Array<FoodPortion>;
    /**
     * 
     * @type {Array<InputFoodSurvey>}
     * @memberof SurveyFoodItem
     */
    input_foods?: Array<InputFoodSurvey>;
    /**
     * 
     * @type {WweiaFoodCategory}
     * @memberof SurveyFoodItem
     */
    wweia_food_category?: WweiaFoodCategory;
}

/**
 * Check if a given object implements the SurveyFoodItem interface.
 */
export function instanceOfSurveyFoodItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fdc_id" in value;
    isInstance = isInstance && "data_type" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function SurveyFoodItemFromJSON(json: any): SurveyFoodItem {
    return SurveyFoodItemFromJSONTyped(json, false);
}

export function SurveyFoodItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SurveyFoodItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fdc_id': json['fdcId'],
        'data_type': json['dataType'],
        'description': json['description'],
        'end_date': !exists(json, 'endDate') ? undefined : json['endDate'],
        'food_class': !exists(json, 'foodClass') ? undefined : json['foodClass'],
        'food_code': !exists(json, 'foodCode') ? undefined : json['foodCode'],
        'publication_date': !exists(json, 'publicationDate') ? undefined : json['publicationDate'],
        'start_date': !exists(json, 'startDate') ? undefined : json['startDate'],
        'food_attributes': !exists(json, 'foodAttributes') ? undefined : ((json['foodAttributes'] as Array<any>).map(FoodAttributeFromJSON)),
        'food_portions': !exists(json, 'foodPortions') ? undefined : ((json['foodPortions'] as Array<any>).map(FoodPortionFromJSON)),
        'input_foods': !exists(json, 'inputFoods') ? undefined : ((json['inputFoods'] as Array<any>).map(InputFoodSurveyFromJSON)),
        'wweia_food_category': !exists(json, 'wweiaFoodCategory') ? undefined : WweiaFoodCategoryFromJSON(json['wweiaFoodCategory']),
    };
}

export function SurveyFoodItemToJSON(value?: SurveyFoodItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fdcId': value.fdc_id,
        'dataType': value.data_type,
        'description': value.description,
        'endDate': value.end_date,
        'foodClass': value.food_class,
        'foodCode': value.food_code,
        'publicationDate': value.publication_date,
        'startDate': value.start_date,
        'foodAttributes': value.food_attributes === undefined ? undefined : ((value.food_attributes as Array<any>).map(FoodAttributeToJSON)),
        'foodPortions': value.food_portions === undefined ? undefined : ((value.food_portions as Array<any>).map(FoodPortionToJSON)),
        'inputFoods': value.input_foods === undefined ? undefined : ((value.input_foods as Array<any>).map(InputFoodSurveyToJSON)),
        'wweiaFoodCategory': WweiaFoodCategoryToJSON(value.wweia_food_category),
    };
}

