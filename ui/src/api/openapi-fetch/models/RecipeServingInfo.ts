/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * recipe servings info
 * @export
 * @interface RecipeServingInfo
 */
export interface RecipeServingInfo {
    /**
     * num servings
     * @type {number}
     * @memberof RecipeServingInfo
     */
    servings?: number;
    /**
     * serving quantity
     * @type {number}
     * @memberof RecipeServingInfo
     */
    quantity: number;
    /**
     * serving unit
     * @type {string}
     * @memberof RecipeServingInfo
     */
    unit: string;
}

/**
 * Check if a given object implements the RecipeServingInfo interface.
 */
export function instanceOfRecipeServingInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "quantity" in value;
    isInstance = isInstance && "unit" in value;

    return isInstance;
}

export function RecipeServingInfoFromJSON(json: any): RecipeServingInfo {
    return RecipeServingInfoFromJSONTyped(json, false);
}

export function RecipeServingInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipeServingInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'servings': !exists(json, 'servings') ? undefined : json['servings'],
        'quantity': json['quantity'],
        'unit': json['unit'],
    };
}

export function RecipeServingInfoToJSON(value?: RecipeServingInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'servings': value.servings,
        'quantity': value.quantity,
        'unit': value.unit,
    };
}

