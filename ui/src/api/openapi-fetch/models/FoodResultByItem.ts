/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BrandedFoodItem } from './BrandedFoodItem';
import {
    BrandedFoodItemFromJSON,
    BrandedFoodItemFromJSONTyped,
    BrandedFoodItemToJSON,
} from './BrandedFoodItem';
import type { FoodInfo } from './FoodInfo';
import {
    FoodInfoFromJSON,
    FoodInfoFromJSONTyped,
    FoodInfoToJSON,
} from './FoodInfo';
import type { FoundationFoodItem } from './FoundationFoodItem';
import {
    FoundationFoodItemFromJSON,
    FoundationFoodItemFromJSONTyped,
    FoundationFoodItemToJSON,
} from './FoundationFoodItem';
import type { SRLegacyFoodItem } from './SRLegacyFoodItem';
import {
    SRLegacyFoodItemFromJSON,
    SRLegacyFoodItemFromJSONTyped,
    SRLegacyFoodItemToJSON,
} from './SRLegacyFoodItem';
import type { SurveyFoodItem } from './SurveyFoodItem';
import {
    SurveyFoodItemFromJSON,
    SurveyFoodItemFromJSONTyped,
    SurveyFoodItemToJSON,
} from './SurveyFoodItem';

/**
 * A meal, which bridges recipes to photos
 * @export
 * @interface FoodResultByItem
 */
export interface FoodResultByItem {
    /**
     * 
     * @type {Array<BrandedFoodItem>}
     * @memberof FoodResultByItem
     */
    branded_food: Array<BrandedFoodItem>;
    /**
     * 
     * @type {Array<FoundationFoodItem>}
     * @memberof FoodResultByItem
     */
    foundation_food: Array<FoundationFoodItem>;
    /**
     * 
     * @type {Array<SRLegacyFoodItem>}
     * @memberof FoodResultByItem
     */
    legacy_food: Array<SRLegacyFoodItem>;
    /**
     * 
     * @type {Array<SurveyFoodItem>}
     * @memberof FoodResultByItem
     */
    survey_food: Array<SurveyFoodItem>;
    /**
     * 
     * @type {Array<FoodInfo>}
     * @memberof FoodResultByItem
     */
    info: Array<FoodInfo>;
}

/**
 * Check if a given object implements the FoodResultByItem interface.
 */
export function instanceOfFoodResultByItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "branded_food" in value;
    isInstance = isInstance && "foundation_food" in value;
    isInstance = isInstance && "legacy_food" in value;
    isInstance = isInstance && "survey_food" in value;
    isInstance = isInstance && "info" in value;

    return isInstance;
}

export function FoodResultByItemFromJSON(json: any): FoodResultByItem {
    return FoodResultByItemFromJSONTyped(json, false);
}

export function FoodResultByItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): FoodResultByItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'branded_food': ((json['branded_food'] as Array<any>).map(BrandedFoodItemFromJSON)),
        'foundation_food': ((json['foundation_food'] as Array<any>).map(FoundationFoodItemFromJSON)),
        'legacy_food': ((json['legacy_food'] as Array<any>).map(SRLegacyFoodItemFromJSON)),
        'survey_food': ((json['survey_food'] as Array<any>).map(SurveyFoodItemFromJSON)),
        'info': ((json['info'] as Array<any>).map(FoodInfoFromJSON)),
    };
}

export function FoodResultByItemToJSON(value?: FoodResultByItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'branded_food': ((value.branded_food as Array<any>).map(BrandedFoodItemToJSON)),
        'foundation_food': ((value.foundation_food as Array<any>).map(FoundationFoodItemToJSON)),
        'legacy_food': ((value.legacy_food as Array<any>).map(SRLegacyFoodItemToJSON)),
        'survey_food': ((value.survey_food as Array<any>).map(SurveyFoodItemToJSON)),
        'info': ((value.info as Array<any>).map(FoodInfoToJSON)),
    };
}

