/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SampleFoodItem } from './SampleFoodItem';
import {
    SampleFoodItemFromJSON,
    SampleFoodItemFromJSONTyped,
    SampleFoodItemToJSON,
} from './SampleFoodItem';

/**
 * applies to Foundation foods. Not all inputFoods will have all fields.
 * @export
 * @interface InputFoodFoundation
 */
export interface InputFoodFoundation {
    /**
     * 
     * @type {number}
     * @memberof InputFoodFoundation
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof InputFoodFoundation
     */
    food_description?: string;
    /**
     * 
     * @type {SampleFoodItem}
     * @memberof InputFoodFoundation
     */
    input_food?: SampleFoodItem;
}

/**
 * Check if a given object implements the InputFoodFoundation interface.
 */
export function instanceOfInputFoodFoundation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InputFoodFoundationFromJSON(json: any): InputFoodFoundation {
    return InputFoodFoundationFromJSONTyped(json, false);
}

export function InputFoodFoundationFromJSONTyped(json: any, ignoreDiscriminator: boolean): InputFoodFoundation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'food_description': !exists(json, 'foodDescription') ? undefined : json['foodDescription'],
        'input_food': !exists(json, 'inputFood') ? undefined : SampleFoodItemFromJSON(json['inputFood']),
    };
}

export function InputFoodFoundationToJSON(value?: InputFoodFoundation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'foodDescription': value.food_description,
        'inputFood': SampleFoodItemToJSON(value.input_food),
    };
}

