/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FoodNutrientSource } from './FoodNutrientSource';
import {
    FoodNutrientSourceFromJSON,
    FoodNutrientSourceFromJSONTyped,
    FoodNutrientSourceToJSON,
} from './FoodNutrientSource';

/**
 * 
 * @export
 * @interface FoodNutrientDerivation
 */
export interface FoodNutrientDerivation {
    /**
     * 
     * @type {number}
     * @memberof FoodNutrientDerivation
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof FoodNutrientDerivation
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof FoodNutrientDerivation
     */
    description?: string;
    /**
     * 
     * @type {FoodNutrientSource}
     * @memberof FoodNutrientDerivation
     */
    food_nutrient_source?: FoodNutrientSource;
}

/**
 * Check if a given object implements the FoodNutrientDerivation interface.
 */
export function instanceOfFoodNutrientDerivation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FoodNutrientDerivationFromJSON(json: any): FoodNutrientDerivation {
    return FoodNutrientDerivationFromJSONTyped(json, false);
}

export function FoodNutrientDerivationFromJSONTyped(json: any, ignoreDiscriminator: boolean): FoodNutrientDerivation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'food_nutrient_source': !exists(json, 'foodNutrientSource') ? undefined : FoodNutrientSourceFromJSON(json['foodNutrientSource']),
    };
}

export function FoodNutrientDerivationToJSON(value?: FoodNutrientDerivation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'description': value.description,
        'foodNutrientSource': FoodNutrientSourceToJSON(value.food_nutrient_source),
    };
}

