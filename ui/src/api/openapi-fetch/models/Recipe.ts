/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Meal,
    MealFromJSON,
    MealFromJSONTyped,
    MealToJSON,
    Photo,
    PhotoFromJSON,
    PhotoFromJSONTyped,
    PhotoToJSON,
    RecipeDetail,
    RecipeDetailFromJSON,
    RecipeDetailFromJSONTyped,
    RecipeDetailToJSON,
} from './';

/**
 * A recipe with subcomponents
 * @export
 * @interface Recipe
 */
export interface Recipe {
    /**
     * id
     * @type {string}
     * @memberof Recipe
     */
    id: string;
    /**
     * all the versions of the recipe
     * @type {Array<RecipeDetail>}
     * @memberof Recipe
     */
    versions: Array<RecipeDetail>;
    /**
     * 
     * @type {Array<Meal>}
     * @memberof Recipe
     */
    linked_meals?: Array<Meal>;
    /**
     * 
     * @type {Array<Photo>}
     * @memberof Recipe
     */
    linked_photos?: Array<Photo>;
}

export function RecipeFromJSON(json: any): Recipe {
    return RecipeFromJSONTyped(json, false);
}

export function RecipeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Recipe {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'versions': ((json['versions'] as Array<any>).map(RecipeDetailFromJSON)),
        'linked_meals': !exists(json, 'linked_meals') ? undefined : ((json['linked_meals'] as Array<any>).map(MealFromJSON)),
        'linked_photos': !exists(json, 'linked_photos') ? undefined : ((json['linked_photos'] as Array<any>).map(PhotoFromJSON)),
    };
}

export function RecipeToJSON(value?: Recipe | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'versions': ((value.versions as Array<any>).map(RecipeDetailToJSON)),
        'linked_meals': value.linked_meals === undefined ? undefined : ((value.linked_meals as Array<any>).map(MealToJSON)),
        'linked_photos': value.linked_photos === undefined ? undefined : ((value.linked_photos as Array<any>).map(PhotoToJSON)),
    };
}


