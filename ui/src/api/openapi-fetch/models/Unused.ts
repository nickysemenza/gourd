/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CompactRecipe } from './CompactRecipe';
import {
    CompactRecipeFromJSON,
    CompactRecipeFromJSONTyped,
    CompactRecipeToJSON,
} from './CompactRecipe';
import type { UnitConversionRequest } from './UnitConversionRequest';
import {
    UnitConversionRequestFromJSON,
    UnitConversionRequestFromJSONTyped,
    UnitConversionRequestToJSON,
} from './UnitConversionRequest';

/**
 * 
 * @export
 * @interface Unused
 */
export interface Unused {
    /**
     * 
     * @type {CompactRecipe}
     * @memberof Unused
     */
    _compact?: CompactRecipe;
    /**
     * 
     * @type {UnitConversionRequest}
     * @memberof Unused
     */
    _convert?: UnitConversionRequest;
}

/**
 * Check if a given object implements the Unused interface.
 */
export function instanceOfUnused(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UnusedFromJSON(json: any): Unused {
    return UnusedFromJSONTyped(json, false);
}

export function UnusedFromJSONTyped(json: any, ignoreDiscriminator: boolean): Unused {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        '_compact': !exists(json, '_compact') ? undefined : CompactRecipeFromJSON(json['_compact']),
        '_convert': !exists(json, '_convert') ? undefined : UnitConversionRequestFromJSON(json['_convert']),
    };
}

export function UnusedToJSON(value?: Unused | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        '_compact': CompactRecipeToJSON(value._compact),
        '_convert': UnitConversionRequestToJSON(value._convert),
    };
}

