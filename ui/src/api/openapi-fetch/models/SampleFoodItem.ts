/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SchemasFoodCategory } from './SchemasFoodCategory';
import {
    SchemasFoodCategoryFromJSON,
    SchemasFoodCategoryFromJSONTyped,
    SchemasFoodCategoryToJSON,
} from './SchemasFoodCategory';

/**
 * 
 * @export
 * @interface SampleFoodItem
 */
export interface SampleFoodItem {
    /**
     * 
     * @type {number}
     * @memberof SampleFoodItem
     */
    fdc_id: number;
    /**
     * 
     * @type {string}
     * @memberof SampleFoodItem
     */
    datatype?: string;
    /**
     * 
     * @type {string}
     * @memberof SampleFoodItem
     */
    description: string;
    /**
     * 
     * @type {string}
     * @memberof SampleFoodItem
     */
    food_class?: string;
    /**
     * 
     * @type {string}
     * @memberof SampleFoodItem
     */
    publication_date?: string;
    /**
     * 
     * @type {Array<SchemasFoodCategory>}
     * @memberof SampleFoodItem
     */
    food_attributes?: Array<SchemasFoodCategory>;
}

/**
 * Check if a given object implements the SampleFoodItem interface.
 */
export function instanceOfSampleFoodItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "fdc_id" in value;
    isInstance = isInstance && "description" in value;

    return isInstance;
}

export function SampleFoodItemFromJSON(json: any): SampleFoodItem {
    return SampleFoodItemFromJSONTyped(json, false);
}

export function SampleFoodItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): SampleFoodItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'fdc_id': json['fdcId'],
        'datatype': !exists(json, 'datatype') ? undefined : json['datatype'],
        'description': json['description'],
        'food_class': !exists(json, 'foodClass') ? undefined : json['foodClass'],
        'publication_date': !exists(json, 'publicationDate') ? undefined : json['publicationDate'],
        'food_attributes': !exists(json, 'foodAttributes') ? undefined : ((json['foodAttributes'] as Array<any>).map(SchemasFoodCategoryFromJSON)),
    };
}

export function SampleFoodItemToJSON(value?: SampleFoodItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'fdcId': value.fdc_id,
        'datatype': value.datatype,
        'description': value.description,
        'foodClass': value.food_class,
        'publicationDate': value.publication_date,
        'foodAttributes': value.food_attributes === undefined ? undefined : ((value.food_attributes as Array<any>).map(SchemasFoodCategoryToJSON)),
    };
}

