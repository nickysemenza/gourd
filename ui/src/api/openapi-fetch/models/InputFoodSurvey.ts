/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RetentionFactor } from './RetentionFactor';
import {
    RetentionFactorFromJSON,
    RetentionFactorFromJSONTyped,
    RetentionFactorToJSON,
} from './RetentionFactor';
import type { SurveyFoodItem } from './SurveyFoodItem';
import {
    SurveyFoodItemFromJSON,
    SurveyFoodItemFromJSONTyped,
    SurveyFoodItemToJSON,
} from './SurveyFoodItem';

/**
 * applies to Survey (FNDDS). Not all inputFoods will have all fields.
 * @export
 * @interface InputFoodSurvey
 */
export interface InputFoodSurvey {
    /**
     * 
     * @type {number}
     * @memberof InputFoodSurvey
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof InputFoodSurvey
     */
    amount?: number;
    /**
     * 
     * @type {string}
     * @memberof InputFoodSurvey
     */
    food_description?: string;
    /**
     * 
     * @type {number}
     * @memberof InputFoodSurvey
     */
    ingredient_code?: number;
    /**
     * 
     * @type {string}
     * @memberof InputFoodSurvey
     */
    ingredient_description?: string;
    /**
     * 
     * @type {number}
     * @memberof InputFoodSurvey
     */
    ingredient_weight?: number;
    /**
     * 
     * @type {string}
     * @memberof InputFoodSurvey
     */
    portion_code?: string;
    /**
     * 
     * @type {string}
     * @memberof InputFoodSurvey
     */
    portion_description?: string;
    /**
     * 
     * @type {number}
     * @memberof InputFoodSurvey
     */
    sequence_number?: number;
    /**
     * 
     * @type {number}
     * @memberof InputFoodSurvey
     */
    survey_flag?: number;
    /**
     * 
     * @type {string}
     * @memberof InputFoodSurvey
     */
    unit?: string;
    /**
     * 
     * @type {SurveyFoodItem}
     * @memberof InputFoodSurvey
     */
    input_food?: SurveyFoodItem;
    /**
     * 
     * @type {RetentionFactor}
     * @memberof InputFoodSurvey
     */
    retention_factor?: RetentionFactor;
}

/**
 * Check if a given object implements the InputFoodSurvey interface.
 */
export function instanceOfInputFoodSurvey(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function InputFoodSurveyFromJSON(json: any): InputFoodSurvey {
    return InputFoodSurveyFromJSONTyped(json, false);
}

export function InputFoodSurveyFromJSONTyped(json: any, ignoreDiscriminator: boolean): InputFoodSurvey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'food_description': !exists(json, 'foodDescription') ? undefined : json['foodDescription'],
        'ingredient_code': !exists(json, 'ingredientCode') ? undefined : json['ingredientCode'],
        'ingredient_description': !exists(json, 'ingredientDescription') ? undefined : json['ingredientDescription'],
        'ingredient_weight': !exists(json, 'ingredientWeight') ? undefined : json['ingredientWeight'],
        'portion_code': !exists(json, 'portionCode') ? undefined : json['portionCode'],
        'portion_description': !exists(json, 'portionDescription') ? undefined : json['portionDescription'],
        'sequence_number': !exists(json, 'sequenceNumber') ? undefined : json['sequenceNumber'],
        'survey_flag': !exists(json, 'surveyFlag') ? undefined : json['surveyFlag'],
        'unit': !exists(json, 'unit') ? undefined : json['unit'],
        'input_food': !exists(json, 'inputFood') ? undefined : SurveyFoodItemFromJSON(json['inputFood']),
        'retention_factor': !exists(json, 'retentionFactor') ? undefined : RetentionFactorFromJSON(json['retentionFactor']),
    };
}

export function InputFoodSurveyToJSON(value?: InputFoodSurvey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'amount': value.amount,
        'foodDescription': value.food_description,
        'ingredientCode': value.ingredient_code,
        'ingredientDescription': value.ingredient_description,
        'ingredientWeight': value.ingredient_weight,
        'portionCode': value.portion_code,
        'portionDescription': value.portion_description,
        'sequenceNumber': value.sequence_number,
        'surveyFlag': value.survey_flag,
        'unit': value.unit,
        'inputFood': SurveyFoodItemToJSON(value.input_food),
        'retentionFactor': RetentionFactorToJSON(value.retention_factor),
    };
}

