/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CompactRecipeMeta
 */
export interface CompactRecipeMeta {
    /**
     * 
     * @type {string}
     * @memberof CompactRecipeMeta
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof CompactRecipeMeta
     */
    url?: string;
    /**
     * 
     * @type {string}
     * @memberof CompactRecipeMeta
     */
    image?: string;
}

/**
 * Check if a given object implements the CompactRecipeMeta interface.
 */
export function instanceOfCompactRecipeMeta(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function CompactRecipeMetaFromJSON(json: any): CompactRecipeMeta {
    return CompactRecipeMetaFromJSONTyped(json, false);
}

export function CompactRecipeMetaFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompactRecipeMeta {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'image': !exists(json, 'image') ? undefined : json['image'],
    };
}

export function CompactRecipeMetaToJSON(value?: CompactRecipeMeta | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'url': value.url,
        'image': value.image,
    };
}

