/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Items,
    ItemsFromJSON,
    ItemsFromJSONTyped,
    ItemsToJSON,
    RecipeWrapper,
    RecipeWrapperFromJSON,
    RecipeWrapperFromJSONTyped,
    RecipeWrapperToJSON,
} from './';

/**
 * pages of Recipe
 * @export
 * @interface PaginatedRecipeWrappers
 */
export interface PaginatedRecipeWrappers {
    /**
     * 
     * @type {Array<RecipeWrapper>}
     * @memberof PaginatedRecipeWrappers
     */
    recipes?: Array<RecipeWrapper>;
    /**
     * 
     * @type {Items}
     * @memberof PaginatedRecipeWrappers
     */
    meta: Items;
}

export function PaginatedRecipeWrappersFromJSON(json: any): PaginatedRecipeWrappers {
    return PaginatedRecipeWrappersFromJSONTyped(json, false);
}

export function PaginatedRecipeWrappersFromJSONTyped(json: any, ignoreDiscriminator: boolean): PaginatedRecipeWrappers {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'recipes': !exists(json, 'recipes') ? undefined : ((json['recipes'] as Array<any>).map(RecipeWrapperFromJSON)),
        'meta': ItemsFromJSON(json['meta']),
    };
}

export function PaginatedRecipeWrappersToJSON(value?: PaginatedRecipeWrappers | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'recipes': value.recipes === undefined ? undefined : ((value.recipes as Array<any>).map(RecipeWrapperToJSON)),
        'meta': ItemsToJSON(value.meta),
    };
}


