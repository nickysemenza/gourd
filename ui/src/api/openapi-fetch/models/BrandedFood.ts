/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * branded_food
 * @export
 * @interface BrandedFood
 */
export interface BrandedFood {
    /**
     * 
     * @type {string}
     * @memberof BrandedFood
     */
    brand_owner?: string;
    /**
     * 
     * @type {string}
     * @memberof BrandedFood
     */
    ingredients?: string;
    /**
     * 
     * @type {number}
     * @memberof BrandedFood
     */
    serving_size: number;
    /**
     * 
     * @type {string}
     * @memberof BrandedFood
     */
    serving_size_unit: string;
    /**
     * 
     * @type {string}
     * @memberof BrandedFood
     */
    household_serving?: string;
    /**
     * 
     * @type {string}
     * @memberof BrandedFood
     */
    branded_food_category?: string;
}

/**
 * Check if a given object implements the BrandedFood interface.
 */
export function instanceOfBrandedFood(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "serving_size" in value;
    isInstance = isInstance && "serving_size_unit" in value;

    return isInstance;
}

export function BrandedFoodFromJSON(json: any): BrandedFood {
    return BrandedFoodFromJSONTyped(json, false);
}

export function BrandedFoodFromJSONTyped(json: any, ignoreDiscriminator: boolean): BrandedFood {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'brand_owner': !exists(json, 'brand_owner') ? undefined : json['brand_owner'],
        'ingredients': !exists(json, 'ingredients') ? undefined : json['ingredients'],
        'serving_size': json['serving_size'],
        'serving_size_unit': json['serving_size_unit'],
        'household_serving': !exists(json, 'household_serving') ? undefined : json['household_serving'],
        'branded_food_category': !exists(json, 'branded_food_category') ? undefined : json['branded_food_category'],
    };
}

export function BrandedFoodToJSON(value?: BrandedFood | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'brand_owner': value.brand_owner,
        'ingredients': value.ingredients,
        'serving_size': value.serving_size,
        'serving_size_unit': value.serving_size_unit,
        'household_serving': value.household_serving,
        'branded_food_category': value.branded_food_category,
    };
}

