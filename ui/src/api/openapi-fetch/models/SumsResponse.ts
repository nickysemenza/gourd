/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { UsageValue } from './UsageValue';
import {
    UsageValueFromJSON,
    UsageValueFromJSONTyped,
    UsageValueToJSON,
} from './UsageValue';

/**
 * 
 * @export
 * @interface SumsResponse
 */
export interface SumsResponse {
    /**
     * mappings of equivalent units
     * @type {Array<UsageValue>}
     * @memberof SumsResponse
     */
    sums: Array<UsageValue>;
    /**
     * 
     * @type {{ [key: string]: Array<UsageValue>; }}
     * @memberof SumsResponse
     */
    by_recipe: { [key: string]: Array<UsageValue>; };
}

/**
 * Check if a given object implements the SumsResponse interface.
 */
export function instanceOfSumsResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "sums" in value;
    isInstance = isInstance && "by_recipe" in value;

    return isInstance;
}

export function SumsResponseFromJSON(json: any): SumsResponse {
    return SumsResponseFromJSONTyped(json, false);
}

export function SumsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SumsResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sums': ((json['sums'] as Array<any>).map(UsageValueFromJSON)),
        'by_recipe': json['by_recipe'],
    };
}

export function SumsResponseToJSON(value?: SumsResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sums': ((value.sums as Array<any>).map(UsageValueToJSON)),
        'by_recipe': value.by_recipe,
    };
}

