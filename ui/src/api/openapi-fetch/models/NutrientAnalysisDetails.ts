/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NutrientAcquisitionDetails } from './NutrientAcquisitionDetails';
import {
    NutrientAcquisitionDetailsFromJSON,
    NutrientAcquisitionDetailsFromJSONTyped,
    NutrientAcquisitionDetailsToJSON,
} from './NutrientAcquisitionDetails';

/**
 * 
 * @export
 * @interface NutrientAnalysisDetails
 */
export interface NutrientAnalysisDetails {
    /**
     * 
     * @type {number}
     * @memberof NutrientAnalysisDetails
     */
    sub_sample_id?: number;
    /**
     * 
     * @type {number}
     * @memberof NutrientAnalysisDetails
     */
    amount?: number;
    /**
     * 
     * @type {number}
     * @memberof NutrientAnalysisDetails
     */
    nutrient_id?: number;
    /**
     * 
     * @type {string}
     * @memberof NutrientAnalysisDetails
     */
    lab_method_description?: string;
    /**
     * 
     * @type {string}
     * @memberof NutrientAnalysisDetails
     */
    lab_method_original_description?: string;
    /**
     * 
     * @type {string}
     * @memberof NutrientAnalysisDetails
     */
    lab_method_link?: string;
    /**
     * 
     * @type {string}
     * @memberof NutrientAnalysisDetails
     */
    lab_method_technique?: string;
    /**
     * 
     * @type {Array<NutrientAcquisitionDetails>}
     * @memberof NutrientAnalysisDetails
     */
    nutrient_acquisition_details?: Array<NutrientAcquisitionDetails>;
}

/**
 * Check if a given object implements the NutrientAnalysisDetails interface.
 */
export function instanceOfNutrientAnalysisDetails(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NutrientAnalysisDetailsFromJSON(json: any): NutrientAnalysisDetails {
    return NutrientAnalysisDetailsFromJSONTyped(json, false);
}

export function NutrientAnalysisDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NutrientAnalysisDetails {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sub_sample_id': !exists(json, 'subSampleId') ? undefined : json['subSampleId'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'nutrient_id': !exists(json, 'nutrientId') ? undefined : json['nutrientId'],
        'lab_method_description': !exists(json, 'labMethodDescription') ? undefined : json['labMethodDescription'],
        'lab_method_original_description': !exists(json, 'labMethodOriginalDescription') ? undefined : json['labMethodOriginalDescription'],
        'lab_method_link': !exists(json, 'labMethodLink') ? undefined : json['labMethodLink'],
        'lab_method_technique': !exists(json, 'labMethodTechnique') ? undefined : json['labMethodTechnique'],
        'nutrient_acquisition_details': !exists(json, 'nutrientAcquisitionDetails') ? undefined : ((json['nutrientAcquisitionDetails'] as Array<any>).map(NutrientAcquisitionDetailsFromJSON)),
    };
}

export function NutrientAnalysisDetailsToJSON(value?: NutrientAnalysisDetails | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'subSampleId': value.sub_sample_id,
        'amount': value.amount,
        'nutrientId': value.nutrient_id,
        'labMethodDescription': value.lab_method_description,
        'labMethodOriginalDescription': value.lab_method_original_description,
        'labMethodLink': value.lab_method_link,
        'labMethodTechnique': value.lab_method_technique,
        'nutrientAcquisitionDetails': value.nutrient_acquisition_details === undefined ? undefined : ((value.nutrient_acquisition_details as Array<any>).map(NutrientAcquisitionDetailsToJSON)),
    };
}

