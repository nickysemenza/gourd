/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IngredientKind } from './IngredientKind';
import {
    IngredientKindFromJSON,
    IngredientKindFromJSONTyped,
    IngredientKindToJSON,
} from './IngredientKind';

/**
 * represents a relationship between recipe and ingredient, the latter of which can also be a recipe.
 * @export
 * @interface RecipeDependency
 */
export interface RecipeDependency {
    /**
     * recipe_id
     * @type {string}
     * @memberof RecipeDependency
     */
    recipe_id: string;
    /**
     * id
     * @type {string}
     * @memberof RecipeDependency
     */
    recipe_name: string;
    /**
     * id
     * @type {string}
     * @memberof RecipeDependency
     */
    ingredient_id: string;
    /**
     * id
     * @type {string}
     * @memberof RecipeDependency
     */
    ingredient_name: string;
    /**
     * 
     * @type {IngredientKind}
     * @memberof RecipeDependency
     */
    ingredient_kind: IngredientKind;
}

/**
 * Check if a given object implements the RecipeDependency interface.
 */
export function instanceOfRecipeDependency(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "recipe_id" in value;
    isInstance = isInstance && "recipe_name" in value;
    isInstance = isInstance && "ingredient_id" in value;
    isInstance = isInstance && "ingredient_name" in value;
    isInstance = isInstance && "ingredient_kind" in value;

    return isInstance;
}

export function RecipeDependencyFromJSON(json: any): RecipeDependency {
    return RecipeDependencyFromJSONTyped(json, false);
}

export function RecipeDependencyFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipeDependency {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'recipe_id': json['recipe_id'],
        'recipe_name': json['recipe_name'],
        'ingredient_id': json['ingredient_id'],
        'ingredient_name': json['ingredient_name'],
        'ingredient_kind': IngredientKindFromJSON(json['ingredient_kind']),
    };
}

export function RecipeDependencyToJSON(value?: RecipeDependency | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'recipe_id': value.recipe_id,
        'recipe_name': value.recipe_name,
        'ingredient_id': value.ingredient_id,
        'ingredient_name': value.ingredient_name,
        'ingredient_kind': IngredientKindToJSON(value.ingredient_kind),
    };
}

