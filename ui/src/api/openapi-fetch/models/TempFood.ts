/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BrandedFoodItem } from './BrandedFoodItem';
import {
    BrandedFoodItemFromJSON,
    BrandedFoodItemFromJSONTyped,
    BrandedFoodItemToJSON,
} from './BrandedFoodItem';
import type { FoodNutrient } from './FoodNutrient';
import {
    FoodNutrientFromJSON,
    FoodNutrientFromJSONTyped,
    FoodNutrientToJSON,
} from './FoodNutrient';
import type { FoundationFoodItem } from './FoundationFoodItem';
import {
    FoundationFoodItemFromJSON,
    FoundationFoodItemFromJSONTyped,
    FoundationFoodItemToJSON,
} from './FoundationFoodItem';
import type { SRLegacyFoodItem } from './SRLegacyFoodItem';
import {
    SRLegacyFoodItemFromJSON,
    SRLegacyFoodItemFromJSONTyped,
    SRLegacyFoodItemToJSON,
} from './SRLegacyFoodItem';
import type { SurveyFoodItem } from './SurveyFoodItem';
import {
    SurveyFoodItemFromJSON,
    SurveyFoodItemFromJSONTyped,
    SurveyFoodItemToJSON,
} from './SurveyFoodItem';
import type { TempFoodWrapper } from './TempFoodWrapper';
import {
    TempFoodWrapperFromJSON,
    TempFoodWrapperFromJSONTyped,
    TempFoodWrapperToJSON,
} from './TempFoodWrapper';
import type { UnitMapping } from './UnitMapping';
import {
    UnitMappingFromJSON,
    UnitMappingFromJSONTyped,
    UnitMappingToJSON,
} from './UnitMapping';

/**
 * 
 * @export
 * @interface TempFood
 */
export interface TempFood {
    /**
     * 
     * @type {TempFoodWrapper}
     * @memberof TempFood
     */
    wrapper: TempFoodWrapper;
    /**
     * 
     * @type {BrandedFoodItem}
     * @memberof TempFood
     */
    branded_food?: BrandedFoodItem;
    /**
     * 
     * @type {FoundationFoodItem}
     * @memberof TempFood
     */
    foundation_food?: FoundationFoodItem;
    /**
     * 
     * @type {SRLegacyFoodItem}
     * @memberof TempFood
     */
    legacy_food?: SRLegacyFoodItem;
    /**
     * 
     * @type {SurveyFoodItem}
     * @memberof TempFood
     */
    survey_food?: SurveyFoodItem;
    /**
     * mappings of equivalent units
     * @type {Array<UnitMapping>}
     * @memberof TempFood
     */
    unit_mappings: Array<UnitMapping>;
    /**
     * 
     * @type {Array<FoodNutrient>}
     * @memberof TempFood
     */
    food_nutrients?: Array<FoodNutrient>;
}

/**
 * Check if a given object implements the TempFood interface.
 */
export function instanceOfTempFood(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "wrapper" in value;
    isInstance = isInstance && "unit_mappings" in value;

    return isInstance;
}

export function TempFoodFromJSON(json: any): TempFood {
    return TempFoodFromJSONTyped(json, false);
}

export function TempFoodFromJSONTyped(json: any, ignoreDiscriminator: boolean): TempFood {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'wrapper': TempFoodWrapperFromJSON(json['wrapper']),
        'branded_food': !exists(json, 'branded_food') ? undefined : BrandedFoodItemFromJSON(json['branded_food']),
        'foundation_food': !exists(json, 'foundation_food') ? undefined : FoundationFoodItemFromJSON(json['foundation_food']),
        'legacy_food': !exists(json, 'legacy_food') ? undefined : SRLegacyFoodItemFromJSON(json['legacy_food']),
        'survey_food': !exists(json, 'survey_food') ? undefined : SurveyFoodItemFromJSON(json['survey_food']),
        'unit_mappings': ((json['unit_mappings'] as Array<any>).map(UnitMappingFromJSON)),
        'food_nutrients': !exists(json, 'foodNutrients') ? undefined : ((json['foodNutrients'] as Array<any>).map(FoodNutrientFromJSON)),
    };
}

export function TempFoodToJSON(value?: TempFood | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'wrapper': TempFoodWrapperToJSON(value.wrapper),
        'branded_food': BrandedFoodItemToJSON(value.branded_food),
        'foundation_food': FoundationFoodItemToJSON(value.foundation_food),
        'legacy_food': SRLegacyFoodItemToJSON(value.legacy_food),
        'survey_food': SurveyFoodItemToJSON(value.survey_food),
        'unit_mappings': ((value.unit_mappings as Array<any>).map(UnitMappingToJSON)),
        'foodNutrients': value.food_nutrients === undefined ? undefined : ((value.food_nutrients as Array<any>).map(FoodNutrientToJSON)),
    };
}

