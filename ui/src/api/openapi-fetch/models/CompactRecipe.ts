/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CompactRecipeMeta,
    CompactRecipeMetaFromJSON,
    CompactRecipeMetaFromJSONTyped,
    CompactRecipeMetaToJSON,
    CompactRecipeSection,
    CompactRecipeSectionFromJSON,
    CompactRecipeSectionFromJSONTyped,
    CompactRecipeSectionToJSON,
} from './';

/**
 * 
 * @export
 * @interface CompactRecipe
 */
export interface CompactRecipe {
    /**
     * 
     * @type {CompactRecipeMeta}
     * @memberof CompactRecipe
     */
    meta: CompactRecipeMeta;
    /**
     * 
     * @type {Array<CompactRecipeSection>}
     * @memberof CompactRecipe
     */
    sections: Array<CompactRecipeSection>;
}

export function CompactRecipeFromJSON(json: any): CompactRecipe {
    return CompactRecipeFromJSONTyped(json, false);
}

export function CompactRecipeFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompactRecipe {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'meta': CompactRecipeMetaFromJSON(json['meta']),
        'sections': ((json['sections'] as Array<any>).map(CompactRecipeSectionFromJSON)),
    };
}

export function CompactRecipeToJSON(value?: CompactRecipe | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'meta': CompactRecipeMetaToJSON(value.meta),
        'sections': ((value.sections as Array<any>).map(CompactRecipeSectionToJSON)),
    };
}


