/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FoodNutrientDerivation } from './FoodNutrientDerivation';
import {
    FoodNutrientDerivationFromJSON,
    FoodNutrientDerivationFromJSONTyped,
    FoodNutrientDerivationToJSON,
} from './FoodNutrientDerivation';
import type { Nutrient } from './Nutrient';
import {
    NutrientFromJSON,
    NutrientFromJSONTyped,
    NutrientToJSON,
} from './Nutrient';
import type { NutrientAnalysisDetails } from './NutrientAnalysisDetails';
import {
    NutrientAnalysisDetailsFromJSON,
    NutrientAnalysisDetailsFromJSONTyped,
    NutrientAnalysisDetailsToJSON,
} from './NutrientAnalysisDetails';

/**
 * 
 * @export
 * @interface FoodNutrient
 */
export interface FoodNutrient {
    /**
     * 
     * @type {number}
     * @memberof FoodNutrient
     */
    id: number;
    /**
     * 
     * @type {number}
     * @memberof FoodNutrient
     */
    amount?: number;
    /**
     * 
     * @type {number}
     * @memberof FoodNutrient
     */
    data_points?: number;
    /**
     * 
     * @type {number}
     * @memberof FoodNutrient
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof FoodNutrient
     */
    max?: number;
    /**
     * 
     * @type {number}
     * @memberof FoodNutrient
     */
    median?: number;
    /**
     * 
     * @type {string}
     * @memberof FoodNutrient
     */
    type?: string;
    /**
     * 
     * @type {Nutrient}
     * @memberof FoodNutrient
     */
    nutrient?: Nutrient;
    /**
     * 
     * @type {FoodNutrientDerivation}
     * @memberof FoodNutrient
     */
    food_nutrient_derivation?: FoodNutrientDerivation;
    /**
     * 
     * @type {NutrientAnalysisDetails}
     * @memberof FoodNutrient
     */
    nutrient_analysis_details?: NutrientAnalysisDetails;
}

/**
 * Check if a given object implements the FoodNutrient interface.
 */
export function instanceOfFoodNutrient(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;

    return isInstance;
}

export function FoodNutrientFromJSON(json: any): FoodNutrient {
    return FoodNutrientFromJSONTyped(json, false);
}

export function FoodNutrientFromJSONTyped(json: any, ignoreDiscriminator: boolean): FoodNutrient {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
        'data_points': !exists(json, 'dataPoints') ? undefined : json['dataPoints'],
        'min': !exists(json, 'min') ? undefined : json['min'],
        'max': !exists(json, 'max') ? undefined : json['max'],
        'median': !exists(json, 'median') ? undefined : json['median'],
        'type': !exists(json, 'type') ? undefined : json['type'],
        'nutrient': !exists(json, 'nutrient') ? undefined : NutrientFromJSON(json['nutrient']),
        'food_nutrient_derivation': !exists(json, 'foodNutrientDerivation') ? undefined : FoodNutrientDerivationFromJSON(json['foodNutrientDerivation']),
        'nutrient_analysis_details': !exists(json, 'nutrientAnalysisDetails') ? undefined : NutrientAnalysisDetailsFromJSON(json['nutrientAnalysisDetails']),
    };
}

export function FoodNutrientToJSON(value?: FoodNutrient | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'amount': value.amount,
        'dataPoints': value.data_points,
        'min': value.min,
        'max': value.max,
        'median': value.median,
        'type': value.type,
        'nutrient': NutrientToJSON(value.nutrient),
        'foodNutrientDerivation': FoodNutrientDerivationToJSON(value.food_nutrient_derivation),
        'nutrientAnalysisDetails': NutrientAnalysisDetailsToJSON(value.nutrient_analysis_details),
    };
}

