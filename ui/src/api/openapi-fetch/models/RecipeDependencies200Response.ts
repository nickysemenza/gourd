/* tslint:disable */
/* eslint-disable */
/**
 * Gourd Recipe Database
 * API for https://github.com/nickysemenza/gourd
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: n@nickysemenza.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RecipeDependency } from './RecipeDependency';
import {
    RecipeDependencyFromJSON,
    RecipeDependencyFromJSONTyped,
    RecipeDependencyToJSON,
} from './RecipeDependency';

/**
 * 
 * @export
 * @interface RecipeDependencies200Response
 */
export interface RecipeDependencies200Response {
    /**
     * all
     * @type {Array<RecipeDependency>}
     * @memberof RecipeDependencies200Response
     */
    items?: Array<RecipeDependency>;
}

/**
 * Check if a given object implements the RecipeDependencies200Response interface.
 */
export function instanceOfRecipeDependencies200Response(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecipeDependencies200ResponseFromJSON(json: any): RecipeDependencies200Response {
    return RecipeDependencies200ResponseFromJSONTyped(json, false);
}

export function RecipeDependencies200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipeDependencies200Response {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(RecipeDependencyFromJSON)),
    };
}

export function RecipeDependencies200ResponseToJSON(value?: RecipeDependencies200Response | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(RecipeDependencyToJSON)),
    };
}

